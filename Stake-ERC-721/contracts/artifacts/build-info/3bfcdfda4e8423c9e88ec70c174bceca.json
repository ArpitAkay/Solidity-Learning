{
	"id": "3bfcdfda4e8423c9e88ec70c174bceca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Web3Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\n\ncontract Staking is IERC721Receiver, ERC721Holder {\n\n    IERC721 immutable nft;\n    IERC20 immutable token; \n\n    mapping (address => mapping(uint256 => uint256)) public stakes;\n\n    constructor(address _nft, address _token) {\n        nft = IERC721(_nft);\n        token = IERC20(_token);\n    }\n\n    function stake(uint256 _tokenId) public {\n        require(nft.ownerOf(_tokenId) == msg.sender, \"You don't own this NFT\");\n\n        //Stake the NFT\n        stakes[msg.sender][_tokenId] = block.timestamp;\n\n        nft.safeTransferFrom(msg.sender, address(this), _tokenId, \"\");\n    }\n\n    function unstake(uint256 _tokenId) public {\n        //Calculate reward\n        uint256 reward = calculateReward(_tokenId);\n        delete stakes[msg.sender][_tokenId];\n\n        nft.safeTransferFrom(address(this), msg.sender, _tokenId, \"\");\n\n        token.transfer(msg.sender, reward);\n    }\n\n    function calculateReward(uint256 _tokenId) private view returns (uint256){\n        require(stakes[msg.sender][_tokenId] > 0, \"Nft has not been staked\");\n        uint256 time = block.timestamp - stakes[msg.sender][_tokenId];\n        uint256 reward = calculate(time) * time * (10 ** 18) / 1 minutes;\n        return reward;\n    } \n\n    function calculate(uint256 time) private pure returns (uint256) {\n        if(time < 1 minutes) {\n            return 0;\n        } else if(time < 3 minutes) {\n            return 3;\n        } else if(time < 5 minutes) {\n            return 5;\n        } else {\n            return 10;\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n * {IERC721-setApprovalForAll}.\n */\nabstract contract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Web3Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Web3Staking.sol\":313:1823  contract Staking is IERC721Receiver, ERC721Holder {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/Web3Staking.sol\":496:606  constructor(address _nft, address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Web3Staking.sol\":562:566  _nft */\n  dup2\n    /* \"contracts/Web3Staking.sol\":548:567  nft = IERC721(_nft) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Web3Staking.sol\":592:598  _token */\n  dup1\n    /* \"contracts/Web3Staking.sol\":577:599  token = IERC20(_token) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Web3Staking.sol\":496:606  constructor(address _nft, address _token) {... */\n  pop\n  pop\n    /* \"contracts/Web3Staking.sol\":313:1823  contract Staking is IERC721Receiver, ERC721Holder {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Web3Staking.sol\":313:1823  contract Staking is IERC721Receiver, ERC721Holder {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n  0x00\n  assignImmutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Web3Staking.sol\":313:1823  contract Staking is IERC721Receiver, ERC721Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x584b62a1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":639:792  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Web3Staking.sol\":898:1188  function unstake(uint256 _tokenId) public {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/Web3Staking.sol\":427:489  mapping (address => mapping(uint256 => uint256)) public stakes */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Web3Staking.sol\":612:892  function stake(uint256 _tokenId) public {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":639:792  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":730:736  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":755:785  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":748:785  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":639:792  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3Staking.sol\":898:1188  function unstake(uint256 _tokenId) public {... */\n    tag_16:\n        /* \"contracts/Web3Staking.sol\":977:991  uint256 reward */\n      0x00\n        /* \"contracts/Web3Staking.sol\":994:1019  calculateReward(_tokenId) */\n      tag_28\n        /* \"contracts/Web3Staking.sol\":1010:1018  _tokenId */\n      dup3\n        /* \"contracts/Web3Staking.sol\":994:1009  calculateReward */\n      tag_29\n        /* \"contracts/Web3Staking.sol\":994:1019  calculateReward(_tokenId) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Web3Staking.sol\":977:1019  uint256 reward = calculateReward(_tokenId) */\n      swap1\n      pop\n        /* \"contracts/Web3Staking.sol\":1036:1042  stakes */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1036:1054  stakes[msg.sender] */\n      dup1\n        /* \"contracts/Web3Staking.sol\":1043:1053  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":1036:1054  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Web3Staking.sol\":1036:1064  stakes[msg.sender][_tokenId] */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1055:1063  _tokenId */\n      dup4\n        /* \"contracts/Web3Staking.sol\":1036:1064  stakes[msg.sender][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Web3Staking.sol\":1029:1064  delete stakes[msg.sender][_tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/Web3Staking.sol\":1075:1078  nft */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n        /* \"contracts/Web3Staking.sol\":1075:1095  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Web3Staking.sol\":1104:1108  this */\n      address\n        /* \"contracts/Web3Staking.sol\":1111:1121  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":1123:1131  _tokenId */\n      dup6\n        /* \"contracts/Web3Staking.sol\":1075:1136  nft.safeTransferFrom(address(this), msg.sender, _tokenId, \"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Web3Staking.sol\":1147:1152  token */\n      immutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n        /* \"contracts/Web3Staking.sol\":1147:1161  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Web3Staking.sol\":1162:1172  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":1174:1180  reward */\n      dup4\n        /* \"contracts/Web3Staking.sol\":1147:1181  token.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      pop\n        /* \"contracts/Web3Staking.sol\":940:1188  {... */\n      pop\n        /* \"contracts/Web3Staking.sol\":898:1188  function unstake(uint256 _tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3Staking.sol\":427:489  mapping (address => mapping(uint256 => uint256)) public stakes */\n    tag_20:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Web3Staking.sol\":612:892  function stake(uint256 _tokenId) public {... */\n    tag_25:\n        /* \"contracts/Web3Staking.sol\":695:705  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":670:705  nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Web3Staking.sol\":670:673  nft */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n        /* \"contracts/Web3Staking.sol\":670:681  nft.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/Web3Staking.sol\":682:690  _tokenId */\n      dup4\n        /* \"contracts/Web3Staking.sol\":670:691  nft.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_42:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/Web3Staking.sol\":670:705  nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Web3Staking.sol\":662:732  require(nft.ownerOf(_tokenId) == msg.sender, \"You don't own this NFT\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/Web3Staking.sol\":798:813  block.timestamp */\n      timestamp\n        /* \"contracts/Web3Staking.sol\":767:773  stakes */\n      0x00\n        /* \"contracts/Web3Staking.sol\":767:785  stakes[msg.sender] */\n      dup1\n        /* \"contracts/Web3Staking.sol\":774:784  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":767:785  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Web3Staking.sol\":767:795  stakes[msg.sender][_tokenId] */\n      0x00\n        /* \"contracts/Web3Staking.sol\":786:794  _tokenId */\n      dup4\n        /* \"contracts/Web3Staking.sol\":767:795  stakes[msg.sender][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Web3Staking.sol\":767:813  stakes[msg.sender][_tokenId] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Web3Staking.sol\":824:827  nft */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n        /* \"contracts/Web3Staking.sol\":824:844  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Web3Staking.sol\":845:855  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":865:869  this */\n      address\n        /* \"contracts/Web3Staking.sol\":872:880  _tokenId */\n      dup5\n        /* \"contracts/Web3Staking.sol\":824:885  nft.safeTransferFrom(msg.sender, address(this), _tokenId, \"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_50:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Web3Staking.sol\":612:892  function stake(uint256 _tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3Staking.sol\":1194:1520  function calculateReward(uint256 _tokenId) private view returns (uint256){... */\n    tag_29:\n        /* \"contracts/Web3Staking.sol\":1259:1266  uint256 */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1316:1317  0 */\n      dup1\n        /* \"contracts/Web3Staking.sol\":1285:1291  stakes */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1285:1303  stakes[msg.sender] */\n      dup1\n        /* \"contracts/Web3Staking.sol\":1292:1302  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":1285:1303  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Web3Staking.sol\":1285:1313  stakes[msg.sender][_tokenId] */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1304:1312  _tokenId */\n      dup5\n        /* \"contracts/Web3Staking.sol\":1285:1313  stakes[msg.sender][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Web3Staking.sol\":1285:1317  stakes[msg.sender][_tokenId] > 0 */\n      gt\n        /* \"contracts/Web3Staking.sol\":1277:1345  require(stakes[msg.sender][_tokenId] > 0, \"Nft has not been staked\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"contracts/Web3Staking.sol\":1355:1367  uint256 time */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1388:1394  stakes */\n      dup1\n        /* \"contracts/Web3Staking.sol\":1388:1406  stakes[msg.sender] */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1395:1405  msg.sender */\n      caller\n        /* \"contracts/Web3Staking.sol\":1388:1406  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Web3Staking.sol\":1388:1416  stakes[msg.sender][_tokenId] */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1407:1415  _tokenId */\n      dup5\n        /* \"contracts/Web3Staking.sol\":1388:1416  stakes[msg.sender][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Web3Staking.sol\":1370:1385  block.timestamp */\n      timestamp\n        /* \"contracts/Web3Staking.sol\":1370:1416  block.timestamp - stakes[msg.sender][_tokenId] */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/Web3Staking.sol\":1355:1416  uint256 time = block.timestamp - stakes[msg.sender][_tokenId] */\n      swap1\n      pop\n        /* \"contracts/Web3Staking.sol\":1426:1440  uint256 reward */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1481:1490  1 minutes */\n      0x3c\n        /* \"contracts/Web3Staking.sol\":1469:1477  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Web3Staking.sol\":1461:1465  time */\n      dup4\n        /* \"contracts/Web3Staking.sol\":1443:1458  calculate(time) */\n      tag_60\n        /* \"contracts/Web3Staking.sol\":1453:1457  time */\n      dup6\n        /* \"contracts/Web3Staking.sol\":1443:1452  calculate */\n      tag_61\n        /* \"contracts/Web3Staking.sol\":1443:1458  calculate(time) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/Web3Staking.sol\":1443:1465  calculate(time) * time */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/Web3Staking.sol\":1443:1478  calculate(time) * time * (10 ** 18) */\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"contracts/Web3Staking.sol\":1443:1490  calculate(time) * time * (10 ** 18) / 1 minutes */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/Web3Staking.sol\":1426:1490  uint256 reward = calculate(time) * time * (10 ** 18) / 1 minutes */\n      swap1\n      pop\n        /* \"contracts/Web3Staking.sol\":1507:1513  reward */\n      dup1\n        /* \"contracts/Web3Staking.sol\":1500:1513  return reward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Web3Staking.sol\":1194:1520  function calculateReward(uint256 _tokenId) private view returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Web3Staking.sol\":1527:1821  function calculate(uint256 time) private pure returns (uint256) {... */\n    tag_61:\n        /* \"contracts/Web3Staking.sol\":1582:1589  uint256 */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1611:1620  1 minutes */\n      0x3c\n        /* \"contracts/Web3Staking.sol\":1604:1608  time */\n      dup3\n        /* \"contracts/Web3Staking.sol\":1604:1620  time < 1 minutes */\n      lt\n        /* \"contracts/Web3Staking.sol\":1601:1815  if(time < 1 minutes) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/Web3Staking.sol\":1643:1644  0 */\n      0x00\n        /* \"contracts/Web3Staking.sol\":1636:1644  return 0 */\n      swap1\n      pop\n      jump(tag_67)\n        /* \"contracts/Web3Staking.sol\":1601:1815  if(time < 1 minutes) {... */\n    tag_68:\n        /* \"contracts/Web3Staking.sol\":1671:1680  3 minutes */\n      0xb4\n        /* \"contracts/Web3Staking.sol\":1664:1668  time */\n      dup3\n        /* \"contracts/Web3Staking.sol\":1664:1680  time < 3 minutes */\n      lt\n        /* \"contracts/Web3Staking.sol\":1661:1815  if(time < 3 minutes) {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/Web3Staking.sol\":1703:1704  3 */\n      0x03\n        /* \"contracts/Web3Staking.sol\":1696:1704  return 3 */\n      swap1\n      pop\n      jump(tag_67)\n        /* \"contracts/Web3Staking.sol\":1661:1815  if(time < 3 minutes) {... */\n    tag_70:\n        /* \"contracts/Web3Staking.sol\":1731:1740  5 minutes */\n      0x012c\n        /* \"contracts/Web3Staking.sol\":1724:1728  time */\n      dup3\n        /* \"contracts/Web3Staking.sol\":1724:1740  time < 5 minutes */\n      lt\n        /* \"contracts/Web3Staking.sol\":1721:1815  if(time < 5 minutes) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/Web3Staking.sol\":1763:1764  5 */\n      0x05\n        /* \"contracts/Web3Staking.sol\":1756:1764  return 5 */\n      swap1\n      pop\n      jump(tag_67)\n        /* \"contracts/Web3Staking.sol\":1721:1815  if(time < 5 minutes) {... */\n    tag_72:\n        /* \"contracts/Web3Staking.sol\":1802:1804  10 */\n      0x0a\n        /* \"contracts/Web3Staking.sol\":1795:1804  return 10 */\n      swap1\n      pop\n        /* \"contracts/Web3Staking.sol\":1527:1821  function calculate(uint256 time) private pure returns (uint256) {... */\n    tag_67:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_74:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_75:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_76:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_77:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_78:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_118\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_77\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_79:\n        /* \"#utility.yul\":641:665   */\n      tag_120\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_78\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_121:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_80:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_123\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_79\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_81:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_82:\n        /* \"#utility.yul\":997:1021   */\n      tag_126\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_81\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_127:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_83:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_129\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_82\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_84:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_85:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1545   */\n    tag_86:\n        /* \"#utility.yul\":1484:1490   */\n      0x00\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1531:1538   */\n      not\n        /* \"#utility.yul\":1526:1528   */\n      0x1f\n        /* \"#utility.yul\":1519:1524   */\n      dup4\n        /* \"#utility.yul\":1515:1529   */\n      add\n        /* \"#utility.yul\":1511:1539   */\n      and\n        /* \"#utility.yul\":1501:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_87:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x41\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n        /* \"#utility.yul\":1737:2018   */\n    tag_88:\n        /* \"#utility.yul\":1820:1847   */\n      tag_135\n        /* \"#utility.yul\":1842:1846   */\n      dup3\n        /* \"#utility.yul\":1820:1847   */\n      tag_86\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1812:1818   */\n      dup2\n        /* \"#utility.yul\":1808:1848   */\n      add\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1938:1948   */\n      dup2\n        /* \"#utility.yul\":1935:1957   */\n      lt\n        /* \"#utility.yul\":1914:1932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1902:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1933   */\n      gt\n        /* \"#utility.yul\":1896:1958   */\n      or\n        /* \"#utility.yul\":1893:1981   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_137\n      tag_87\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1893:1981   */\n    tag_136:\n        /* \"#utility.yul\":2001:2011   */\n      dup1\n        /* \"#utility.yul\":1997:1999   */\n      0x40\n        /* \"#utility.yul\":1990:2012   */\n      mstore\n        /* \"#utility.yul\":1780:2018   */\n      pop\n        /* \"#utility.yul\":1737:2018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2153   */\n    tag_89:\n        /* \"#utility.yul\":2058:2064   */\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_139\n      tag_74\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2075:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2147   */\n      tag_140\n        /* \"#utility.yul\":2142:2146   */\n      dup3\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2114:2147   */\n      tag_88\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2024:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2466   */\n    tag_90:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2310:2328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2329   */\n      gt\n        /* \"#utility.yul\":2296:2352   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2332:2350   */\n      tag_143\n      tag_87\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2296:2352   */\n    tag_142:\n        /* \"#utility.yul\":2370:2399   */\n      tag_144\n        /* \"#utility.yul\":2392:2398   */\n      dup3\n        /* \"#utility.yul\":2370:2399   */\n      tag_86\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2362:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2448:2452   */\n      dup2\n        /* \"#utility.yul\":2444:2459   */\n      add\n        /* \"#utility.yul\":2436:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2620   */\n    tag_91:\n        /* \"#utility.yul\":2570:2576   */\n      dup3\n        /* \"#utility.yul\":2565:2568   */\n      dup2\n        /* \"#utility.yul\":2560:2563   */\n      dup4\n        /* \"#utility.yul\":2547:2577   */\n      calldatacopy\n        /* \"#utility.yul\":2611:2612   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup4\n        /* \"#utility.yul\":2597:2600   */\n      dup4\n        /* \"#utility.yul\":2593:2609   */\n      add\n        /* \"#utility.yul\":2586:2613   */\n      mstore\n        /* \"#utility.yul\":2472:2620   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2626:3049   */\n    tag_92:\n        /* \"#utility.yul\":2703:2708   */\n      0x00\n        /* \"#utility.yul\":2728:2793   */\n      tag_147\n        /* \"#utility.yul\":2744:2792   */\n      tag_148\n        /* \"#utility.yul\":2785:2791   */\n      dup5\n        /* \"#utility.yul\":2744:2792   */\n      tag_90\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2728:2793   */\n      tag_89\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2719:2793   */\n      swap1\n      pop\n        /* \"#utility.yul\":2816:2822   */\n      dup3\n        /* \"#utility.yul\":2809:2814   */\n      dup2\n        /* \"#utility.yul\":2802:2823   */\n      mstore\n        /* \"#utility.yul\":2854:2858   */\n      0x20\n        /* \"#utility.yul\":2847:2852   */\n      dup2\n        /* \"#utility.yul\":2843:2859   */\n      add\n        /* \"#utility.yul\":2892:2895   */\n      dup5\n        /* \"#utility.yul\":2883:2889   */\n      dup5\n        /* \"#utility.yul\":2878:2881   */\n      dup5\n        /* \"#utility.yul\":2874:2890   */\n      add\n        /* \"#utility.yul\":2871:2896   */\n      gt\n        /* \"#utility.yul\":2868:2980   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":2899:2978   */\n      tag_150\n      tag_85\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2868:2980   */\n    tag_149:\n        /* \"#utility.yul\":2989:3043   */\n      tag_151\n        /* \"#utility.yul\":3036:3042   */\n      dup5\n        /* \"#utility.yul\":3031:3034   */\n      dup3\n        /* \"#utility.yul\":3026:3029   */\n      dup6\n        /* \"#utility.yul\":2989:3043   */\n      tag_91\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2709:3049   */\n      pop\n        /* \"#utility.yul\":2626:3049   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3406   */\n    tag_93:\n        /* \"#utility.yul\":3123:3128   */\n      0x00\n        /* \"#utility.yul\":3172:3175   */\n      dup3\n        /* \"#utility.yul\":3165:3169   */\n      0x1f\n        /* \"#utility.yul\":3157:3163   */\n      dup4\n        /* \"#utility.yul\":3153:3170   */\n      add\n        /* \"#utility.yul\":3149:3176   */\n      slt\n        /* \"#utility.yul\":3139:3261   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3180:3259   */\n      tag_154\n      tag_84\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3139:3261   */\n    tag_153:\n        /* \"#utility.yul\":3297:3303   */\n      dup2\n        /* \"#utility.yul\":3284:3304   */\n      calldataload\n        /* \"#utility.yul\":3322:3400   */\n      tag_155\n        /* \"#utility.yul\":3396:3399   */\n      dup5\n        /* \"#utility.yul\":3388:3394   */\n      dup3\n        /* \"#utility.yul\":3381:3385   */\n      0x20\n        /* \"#utility.yul\":3373:3379   */\n      dup7\n        /* \"#utility.yul\":3369:3386   */\n      add\n        /* \"#utility.yul\":3322:3400   */\n      tag_92\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3313:3400   */\n      swap2\n      pop\n        /* \"#utility.yul\":3129:3406   */\n      pop\n        /* \"#utility.yul\":3068:3406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3412:4355   */\n    tag_9:\n        /* \"#utility.yul\":3507:3513   */\n      0x00\n        /* \"#utility.yul\":3515:3521   */\n      dup1\n        /* \"#utility.yul\":3523:3529   */\n      0x00\n        /* \"#utility.yul\":3531:3537   */\n      dup1\n        /* \"#utility.yul\":3580:3583   */\n      0x80\n        /* \"#utility.yul\":3568:3577   */\n      dup6\n        /* \"#utility.yul\":3559:3566   */\n      dup8\n        /* \"#utility.yul\":3555:3578   */\n      sub\n        /* \"#utility.yul\":3551:3584   */\n      slt\n        /* \"#utility.yul\":3548:3668   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":3587:3666   */\n      tag_158\n      tag_75\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3548:3668   */\n    tag_157:\n        /* \"#utility.yul\":3707:3708   */\n      0x00\n        /* \"#utility.yul\":3732:3785   */\n      tag_159\n        /* \"#utility.yul\":3777:3784   */\n      dup8\n        /* \"#utility.yul\":3768:3774   */\n      dup3\n        /* \"#utility.yul\":3757:3766   */\n      dup9\n        /* \"#utility.yul\":3753:3775   */\n      add\n        /* \"#utility.yul\":3732:3785   */\n      tag_80\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3722:3785   */\n      swap5\n      pop\n        /* \"#utility.yul\":3678:3795   */\n      pop\n        /* \"#utility.yul\":3834:3836   */\n      0x20\n        /* \"#utility.yul\":3860:3913   */\n      tag_160\n        /* \"#utility.yul\":3905:3912   */\n      dup8\n        /* \"#utility.yul\":3896:3902   */\n      dup3\n        /* \"#utility.yul\":3885:3894   */\n      dup9\n        /* \"#utility.yul\":3881:3903   */\n      add\n        /* \"#utility.yul\":3860:3913   */\n      tag_80\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3850:3913   */\n      swap4\n      pop\n        /* \"#utility.yul\":3805:3923   */\n      pop\n        /* \"#utility.yul\":3962:3964   */\n      0x40\n        /* \"#utility.yul\":3988:4041   */\n      tag_161\n        /* \"#utility.yul\":4033:4040   */\n      dup8\n        /* \"#utility.yul\":4024:4030   */\n      dup3\n        /* \"#utility.yul\":4013:4022   */\n      dup9\n        /* \"#utility.yul\":4009:4031   */\n      add\n        /* \"#utility.yul\":3988:4041   */\n      tag_83\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3978:4041   */\n      swap3\n      pop\n        /* \"#utility.yul\":3933:4051   */\n      pop\n        /* \"#utility.yul\":4118:4120   */\n      0x60\n        /* \"#utility.yul\":4107:4116   */\n      dup6\n        /* \"#utility.yul\":4103:4121   */\n      add\n        /* \"#utility.yul\":4090:4122   */\n      calldataload\n        /* \"#utility.yul\":4149:4167   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4141:4147   */\n      dup2\n        /* \"#utility.yul\":4138:4168   */\n      gt\n        /* \"#utility.yul\":4135:4252   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":4171:4250   */\n      tag_163\n      tag_76\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4135:4252   */\n    tag_162:\n        /* \"#utility.yul\":4276:4338   */\n      tag_164\n        /* \"#utility.yul\":4330:4337   */\n      dup8\n        /* \"#utility.yul\":4321:4327   */\n      dup3\n        /* \"#utility.yul\":4310:4319   */\n      dup9\n        /* \"#utility.yul\":4306:4328   */\n      add\n        /* \"#utility.yul\":4276:4338   */\n      tag_93\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4266:4338   */\n      swap2\n      pop\n        /* \"#utility.yul\":4061:4348   */\n      pop\n        /* \"#utility.yul\":3412:4355   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4510   */\n    tag_94:\n        /* \"#utility.yul\":4397:4404   */\n      0x00\n        /* \"#utility.yul\":4437:4503   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4430:4435   */\n      dup3\n        /* \"#utility.yul\":4426:4504   */\n      and\n        /* \"#utility.yul\":4415:4504   */\n      swap1\n      pop\n        /* \"#utility.yul\":4361:4510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4516:4631   */\n    tag_95:\n        /* \"#utility.yul\":4601:4624   */\n      tag_167\n        /* \"#utility.yul\":4618:4623   */\n      dup2\n        /* \"#utility.yul\":4601:4624   */\n      tag_94\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4596:4599   */\n      dup3\n        /* \"#utility.yul\":4589:4625   */\n      mstore\n        /* \"#utility.yul\":4516:4631   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:4855   */\n    tag_12:\n        /* \"#utility.yul\":4728:4732   */\n      0x00\n        /* \"#utility.yul\":4766:4768   */\n      0x20\n        /* \"#utility.yul\":4755:4764   */\n      dup3\n        /* \"#utility.yul\":4751:4769   */\n      add\n        /* \"#utility.yul\":4743:4769   */\n      swap1\n      pop\n        /* \"#utility.yul\":4779:4848   */\n      tag_169\n        /* \"#utility.yul\":4845:4846   */\n      0x00\n        /* \"#utility.yul\":4834:4843   */\n      dup4\n        /* \"#utility.yul\":4830:4847   */\n      add\n        /* \"#utility.yul\":4821:4827   */\n      dup5\n        /* \"#utility.yul\":4779:4848   */\n      tag_95\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4637:4855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5190   */\n    tag_15:\n        /* \"#utility.yul\":4920:4926   */\n      0x00\n        /* \"#utility.yul\":4969:4971   */\n      0x20\n        /* \"#utility.yul\":4957:4966   */\n      dup3\n        /* \"#utility.yul\":4948:4955   */\n      dup5\n        /* \"#utility.yul\":4944:4967   */\n      sub\n        /* \"#utility.yul\":4940:4972   */\n      slt\n        /* \"#utility.yul\":4937:5056   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":4975:5054   */\n      tag_172\n      tag_75\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4937:5056   */\n    tag_171:\n        /* \"#utility.yul\":5095:5096   */\n      0x00\n        /* \"#utility.yul\":5120:5173   */\n      tag_173\n        /* \"#utility.yul\":5165:5172   */\n      dup5\n        /* \"#utility.yul\":5156:5162   */\n      dup3\n        /* \"#utility.yul\":5145:5154   */\n      dup6\n        /* \"#utility.yul\":5141:5163   */\n      add\n        /* \"#utility.yul\":5120:5173   */\n      tag_83\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5110:5173   */\n      swap2\n      pop\n        /* \"#utility.yul\":5066:5183   */\n      pop\n        /* \"#utility.yul\":4861:5190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5196:5670   */\n    tag_19:\n        /* \"#utility.yul\":5264:5270   */\n      0x00\n        /* \"#utility.yul\":5272:5278   */\n      dup1\n        /* \"#utility.yul\":5321:5323   */\n      0x40\n        /* \"#utility.yul\":5309:5318   */\n      dup4\n        /* \"#utility.yul\":5300:5307   */\n      dup6\n        /* \"#utility.yul\":5296:5319   */\n      sub\n        /* \"#utility.yul\":5292:5324   */\n      slt\n        /* \"#utility.yul\":5289:5408   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5327:5406   */\n      tag_176\n      tag_75\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5289:5408   */\n    tag_175:\n        /* \"#utility.yul\":5447:5448   */\n      0x00\n        /* \"#utility.yul\":5472:5525   */\n      tag_177\n        /* \"#utility.yul\":5517:5524   */\n      dup6\n        /* \"#utility.yul\":5508:5514   */\n      dup3\n        /* \"#utility.yul\":5497:5506   */\n      dup7\n        /* \"#utility.yul\":5493:5515   */\n      add\n        /* \"#utility.yul\":5472:5525   */\n      tag_80\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5462:5525   */\n      swap3\n      pop\n        /* \"#utility.yul\":5418:5535   */\n      pop\n        /* \"#utility.yul\":5574:5576   */\n      0x20\n        /* \"#utility.yul\":5600:5653   */\n      tag_178\n        /* \"#utility.yul\":5645:5652   */\n      dup6\n        /* \"#utility.yul\":5636:5642   */\n      dup3\n        /* \"#utility.yul\":5625:5634   */\n      dup7\n        /* \"#utility.yul\":5621:5643   */\n      add\n        /* \"#utility.yul\":5600:5653   */\n      tag_83\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5590:5653   */\n      swap2\n      pop\n        /* \"#utility.yul\":5545:5663   */\n      pop\n        /* \"#utility.yul\":5196:5670   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5676:5794   */\n    tag_96:\n        /* \"#utility.yul\":5763:5787   */\n      tag_180\n        /* \"#utility.yul\":5781:5786   */\n      dup2\n        /* \"#utility.yul\":5763:5787   */\n      tag_81\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5758:5761   */\n      dup3\n        /* \"#utility.yul\":5751:5788   */\n      mstore\n        /* \"#utility.yul\":5676:5794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5800:6022   */\n    tag_22:\n        /* \"#utility.yul\":5893:5897   */\n      0x00\n        /* \"#utility.yul\":5931:5933   */\n      0x20\n        /* \"#utility.yul\":5920:5929   */\n      dup3\n        /* \"#utility.yul\":5916:5934   */\n      add\n        /* \"#utility.yul\":5908:5934   */\n      swap1\n      pop\n        /* \"#utility.yul\":5944:6015   */\n      tag_182\n        /* \"#utility.yul\":6012:6013   */\n      0x00\n        /* \"#utility.yul\":6001:6010   */\n      dup4\n        /* \"#utility.yul\":5997:6014   */\n      add\n        /* \"#utility.yul\":5988:5994   */\n      dup5\n        /* \"#utility.yul\":5944:6015   */\n      tag_96\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5800:6022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6028:6146   */\n    tag_97:\n        /* \"#utility.yul\":6115:6139   */\n      tag_184\n        /* \"#utility.yul\":6133:6138   */\n      dup2\n        /* \"#utility.yul\":6115:6139   */\n      tag_78\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6110:6113   */\n      dup3\n        /* \"#utility.yul\":6103:6140   */\n      mstore\n        /* \"#utility.yul\":6028:6146   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6152:6320   */\n    tag_98:\n        /* \"#utility.yul\":6235:6246   */\n      0x00\n        /* \"#utility.yul\":6269:6275   */\n      dup3\n        /* \"#utility.yul\":6264:6267   */\n      dup3\n        /* \"#utility.yul\":6257:6276   */\n      mstore\n        /* \"#utility.yul\":6309:6313   */\n      0x20\n        /* \"#utility.yul\":6304:6307   */\n      dup3\n        /* \"#utility.yul\":6300:6314   */\n      add\n        /* \"#utility.yul\":6285:6314   */\n      swap1\n      pop\n        /* \"#utility.yul\":6152:6320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6440   */\n    tag_99:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6446:6808   */\n    tag_100:\n        /* \"#utility.yul\":6587:6590   */\n      0x00\n        /* \"#utility.yul\":6608:6673   */\n      tag_188\n        /* \"#utility.yul\":6671:6672   */\n      0x00\n        /* \"#utility.yul\":6666:6669   */\n      dup4\n        /* \"#utility.yul\":6608:6673   */\n      tag_98\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6601:6673   */\n      swap2\n      pop\n        /* \"#utility.yul\":6682:6775   */\n      tag_189\n        /* \"#utility.yul\":6771:6774   */\n      dup3\n        /* \"#utility.yul\":6682:6775   */\n      tag_99\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6795:6798   */\n      dup3\n        /* \"#utility.yul\":6791:6802   */\n      add\n        /* \"#utility.yul\":6784:6802   */\n      swap1\n      pop\n        /* \"#utility.yul\":6446:6808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6814:7562   */\n    tag_31:\n        /* \"#utility.yul\":7063:7067   */\n      0x00\n        /* \"#utility.yul\":7101:7104   */\n      0x80\n        /* \"#utility.yul\":7090:7099   */\n      dup3\n        /* \"#utility.yul\":7086:7105   */\n      add\n        /* \"#utility.yul\":7078:7105   */\n      swap1\n      pop\n        /* \"#utility.yul\":7115:7186   */\n      tag_191\n        /* \"#utility.yul\":7183:7184   */\n      0x00\n        /* \"#utility.yul\":7172:7181   */\n      dup4\n        /* \"#utility.yul\":7168:7185   */\n      add\n        /* \"#utility.yul\":7159:7165   */\n      dup7\n        /* \"#utility.yul\":7115:7186   */\n      tag_97\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7196:7268   */\n      tag_192\n        /* \"#utility.yul\":7264:7266   */\n      0x20\n        /* \"#utility.yul\":7253:7262   */\n      dup4\n        /* \"#utility.yul\":7249:7267   */\n      add\n        /* \"#utility.yul\":7240:7246   */\n      dup6\n        /* \"#utility.yul\":7196:7268   */\n      tag_97\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7278:7350   */\n      tag_193\n        /* \"#utility.yul\":7346:7348   */\n      0x40\n        /* \"#utility.yul\":7335:7344   */\n      dup4\n        /* \"#utility.yul\":7331:7349   */\n      add\n        /* \"#utility.yul\":7322:7328   */\n      dup5\n        /* \"#utility.yul\":7278:7350   */\n      tag_96\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7397:7406   */\n      dup2\n        /* \"#utility.yul\":7391:7395   */\n      dup2\n        /* \"#utility.yul\":7387:7407   */\n      sub\n        /* \"#utility.yul\":7382:7384   */\n      0x60\n        /* \"#utility.yul\":7371:7380   */\n      dup4\n        /* \"#utility.yul\":7367:7385   */\n      add\n        /* \"#utility.yul\":7360:7408   */\n      mstore\n        /* \"#utility.yul\":7425:7555   */\n      tag_194\n        /* \"#utility.yul\":7550:7554   */\n      dup2\n        /* \"#utility.yul\":7425:7555   */\n      tag_100\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7417:7555   */\n      swap1\n      pop\n        /* \"#utility.yul\":6814:7562   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7568:7900   */\n    tag_36:\n        /* \"#utility.yul\":7689:7693   */\n      0x00\n        /* \"#utility.yul\":7727:7729   */\n      0x40\n        /* \"#utility.yul\":7716:7725   */\n      dup3\n        /* \"#utility.yul\":7712:7730   */\n      add\n        /* \"#utility.yul\":7704:7730   */\n      swap1\n      pop\n        /* \"#utility.yul\":7740:7811   */\n      tag_196\n        /* \"#utility.yul\":7808:7809   */\n      0x00\n        /* \"#utility.yul\":7797:7806   */\n      dup4\n        /* \"#utility.yul\":7793:7810   */\n      add\n        /* \"#utility.yul\":7784:7790   */\n      dup6\n        /* \"#utility.yul\":7740:7811   */\n      tag_97\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7821:7893   */\n      tag_197\n        /* \"#utility.yul\":7889:7891   */\n      0x20\n        /* \"#utility.yul\":7878:7887   */\n      dup4\n        /* \"#utility.yul\":7874:7892   */\n      add\n        /* \"#utility.yul\":7865:7871   */\n      dup5\n        /* \"#utility.yul\":7821:7893   */\n      tag_96\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7568:7900   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:7996   */\n    tag_101:\n        /* \"#utility.yul\":7940:7947   */\n      0x00\n        /* \"#utility.yul\":7983:7988   */\n      dup2\n        /* \"#utility.yul\":7976:7989   */\n      iszero\n        /* \"#utility.yul\":7969:7990   */\n      iszero\n        /* \"#utility.yul\":7958:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":7906:7996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8002:8118   */\n    tag_102:\n        /* \"#utility.yul\":8072:8093   */\n      tag_200\n        /* \"#utility.yul\":8087:8092   */\n      dup2\n        /* \"#utility.yul\":8072:8093   */\n      tag_101\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8065:8070   */\n      dup2\n        /* \"#utility.yul\":8062:8094   */\n      eq\n        /* \"#utility.yul\":8052:8112   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":8108:8109   */\n      0x00\n        /* \"#utility.yul\":8105:8106   */\n      dup1\n        /* \"#utility.yul\":8098:8110   */\n      revert\n        /* \"#utility.yul\":8052:8112   */\n    tag_201:\n        /* \"#utility.yul\":8002:8118   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8124:8261   */\n    tag_103:\n        /* \"#utility.yul\":8178:8183   */\n      0x00\n        /* \"#utility.yul\":8209:8215   */\n      dup2\n        /* \"#utility.yul\":8203:8216   */\n      mload\n        /* \"#utility.yul\":8194:8216   */\n      swap1\n      pop\n        /* \"#utility.yul\":8225:8255   */\n      tag_203\n        /* \"#utility.yul\":8249:8254   */\n      dup2\n        /* \"#utility.yul\":8225:8255   */\n      tag_102\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8124:8261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8267:8612   */\n    tag_40:\n        /* \"#utility.yul\":8334:8340   */\n      0x00\n        /* \"#utility.yul\":8383:8385   */\n      0x20\n        /* \"#utility.yul\":8371:8380   */\n      dup3\n        /* \"#utility.yul\":8362:8369   */\n      dup5\n        /* \"#utility.yul\":8358:8381   */\n      sub\n        /* \"#utility.yul\":8354:8386   */\n      slt\n        /* \"#utility.yul\":8351:8470   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":8389:8468   */\n      tag_206\n      tag_75\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8351:8470   */\n    tag_205:\n        /* \"#utility.yul\":8509:8510   */\n      0x00\n        /* \"#utility.yul\":8534:8595   */\n      tag_207\n        /* \"#utility.yul\":8587:8594   */\n      dup5\n        /* \"#utility.yul\":8578:8584   */\n      dup3\n        /* \"#utility.yul\":8567:8576   */\n      dup6\n        /* \"#utility.yul\":8563:8585   */\n      add\n        /* \"#utility.yul\":8534:8595   */\n      tag_103\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8524:8595   */\n      swap2\n      pop\n        /* \"#utility.yul\":8480:8605   */\n      pop\n        /* \"#utility.yul\":8267:8612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8618:8761   */\n    tag_104:\n        /* \"#utility.yul\":8675:8680   */\n      0x00\n        /* \"#utility.yul\":8706:8712   */\n      dup2\n        /* \"#utility.yul\":8700:8713   */\n      mload\n        /* \"#utility.yul\":8691:8713   */\n      swap1\n      pop\n        /* \"#utility.yul\":8722:8755   */\n      tag_209\n        /* \"#utility.yul\":8749:8754   */\n      dup2\n        /* \"#utility.yul\":8722:8755   */\n      tag_79\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8618:8761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8767:9118   */\n    tag_46:\n        /* \"#utility.yul\":8837:8843   */\n      0x00\n        /* \"#utility.yul\":8886:8888   */\n      0x20\n        /* \"#utility.yul\":8874:8883   */\n      dup3\n        /* \"#utility.yul\":8865:8872   */\n      dup5\n        /* \"#utility.yul\":8861:8884   */\n      sub\n        /* \"#utility.yul\":8857:8889   */\n      slt\n        /* \"#utility.yul\":8854:8973   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":8892:8971   */\n      tag_212\n      tag_75\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8854:8973   */\n    tag_211:\n        /* \"#utility.yul\":9012:9013   */\n      0x00\n        /* \"#utility.yul\":9037:9101   */\n      tag_213\n        /* \"#utility.yul\":9093:9100   */\n      dup5\n        /* \"#utility.yul\":9084:9090   */\n      dup3\n        /* \"#utility.yul\":9073:9082   */\n      dup6\n        /* \"#utility.yul\":9069:9091   */\n      add\n        /* \"#utility.yul\":9037:9101   */\n      tag_104\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9027:9101   */\n      swap2\n      pop\n        /* \"#utility.yul\":8983:9111   */\n      pop\n        /* \"#utility.yul\":8767:9118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9124:9293   */\n    tag_105:\n        /* \"#utility.yul\":9208:9219   */\n      0x00\n        /* \"#utility.yul\":9242:9248   */\n      dup3\n        /* \"#utility.yul\":9237:9240   */\n      dup3\n        /* \"#utility.yul\":9230:9249   */\n      mstore\n        /* \"#utility.yul\":9282:9286   */\n      0x20\n        /* \"#utility.yul\":9277:9280   */\n      dup3\n        /* \"#utility.yul\":9273:9287   */\n      add\n        /* \"#utility.yul\":9258:9287   */\n      swap1\n      pop\n        /* \"#utility.yul\":9124:9293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9299:9471   */\n    tag_106:\n        /* \"#utility.yul\":9439:9463   */\n      0x596f7520646f6e2774206f776e2074686973204e465400000000000000000000\n        /* \"#utility.yul\":9435:9436   */\n      0x00\n        /* \"#utility.yul\":9427:9433   */\n      dup3\n        /* \"#utility.yul\":9423:9437   */\n      add\n        /* \"#utility.yul\":9416:9464   */\n      mstore\n        /* \"#utility.yul\":9299:9471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9477:9843   */\n    tag_107:\n        /* \"#utility.yul\":9619:9622   */\n      0x00\n        /* \"#utility.yul\":9640:9707   */\n      tag_217\n        /* \"#utility.yul\":9704:9706   */\n      0x16\n        /* \"#utility.yul\":9699:9702   */\n      dup4\n        /* \"#utility.yul\":9640:9707   */\n      tag_105\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":9633:9707   */\n      swap2\n      pop\n        /* \"#utility.yul\":9716:9809   */\n      tag_218\n        /* \"#utility.yul\":9805:9808   */\n      dup3\n        /* \"#utility.yul\":9716:9809   */\n      tag_106\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9834:9836   */\n      0x20\n        /* \"#utility.yul\":9829:9832   */\n      dup3\n        /* \"#utility.yul\":9825:9837   */\n      add\n        /* \"#utility.yul\":9818:9837   */\n      swap1\n      pop\n        /* \"#utility.yul\":9477:9843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9849:10268   */\n    tag_49:\n        /* \"#utility.yul\":10015:10019   */\n      0x00\n        /* \"#utility.yul\":10053:10055   */\n      0x20\n        /* \"#utility.yul\":10042:10051   */\n      dup3\n        /* \"#utility.yul\":10038:10056   */\n      add\n        /* \"#utility.yul\":10030:10056   */\n      swap1\n      pop\n        /* \"#utility.yul\":10102:10111   */\n      dup2\n        /* \"#utility.yul\":10096:10100   */\n      dup2\n        /* \"#utility.yul\":10092:10112   */\n      sub\n        /* \"#utility.yul\":10088:10089   */\n      0x00\n        /* \"#utility.yul\":10077:10086   */\n      dup4\n        /* \"#utility.yul\":10073:10090   */\n      add\n        /* \"#utility.yul\":10066:10113   */\n      mstore\n        /* \"#utility.yul\":10130:10261   */\n      tag_220\n        /* \"#utility.yul\":10256:10260   */\n      dup2\n        /* \"#utility.yul\":10130:10261   */\n      tag_107\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":10122:10261   */\n      swap1\n      pop\n        /* \"#utility.yul\":9849:10268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10274:10447   */\n    tag_108:\n        /* \"#utility.yul\":10414:10439   */\n      0x4e667420686173206e6f74206265656e207374616b6564000000000000000000\n        /* \"#utility.yul\":10410:10411   */\n      0x00\n        /* \"#utility.yul\":10402:10408   */\n      dup3\n        /* \"#utility.yul\":10398:10412   */\n      add\n        /* \"#utility.yul\":10391:10440   */\n      mstore\n        /* \"#utility.yul\":10274:10447   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10453:10819   */\n    tag_109:\n        /* \"#utility.yul\":10595:10598   */\n      0x00\n        /* \"#utility.yul\":10616:10683   */\n      tag_223\n        /* \"#utility.yul\":10680:10682   */\n      0x17\n        /* \"#utility.yul\":10675:10678   */\n      dup4\n        /* \"#utility.yul\":10616:10683   */\n      tag_105\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":10609:10683   */\n      swap2\n      pop\n        /* \"#utility.yul\":10692:10785   */\n      tag_224\n        /* \"#utility.yul\":10781:10784   */\n      dup3\n        /* \"#utility.yul\":10692:10785   */\n      tag_108\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":10810:10812   */\n      0x20\n        /* \"#utility.yul\":10805:10808   */\n      dup3\n        /* \"#utility.yul\":10801:10813   */\n      add\n        /* \"#utility.yul\":10794:10813   */\n      swap1\n      pop\n        /* \"#utility.yul\":10453:10819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10825:11244   */\n    tag_57:\n        /* \"#utility.yul\":10991:10995   */\n      0x00\n        /* \"#utility.yul\":11029:11031   */\n      0x20\n        /* \"#utility.yul\":11018:11027   */\n      dup3\n        /* \"#utility.yul\":11014:11032   */\n      add\n        /* \"#utility.yul\":11006:11032   */\n      swap1\n      pop\n        /* \"#utility.yul\":11078:11087   */\n      dup2\n        /* \"#utility.yul\":11072:11076   */\n      dup2\n        /* \"#utility.yul\":11068:11088   */\n      sub\n        /* \"#utility.yul\":11064:11065   */\n      0x00\n        /* \"#utility.yul\":11053:11062   */\n      dup4\n        /* \"#utility.yul\":11049:11066   */\n      add\n        /* \"#utility.yul\":11042:11089   */\n      mstore\n        /* \"#utility.yul\":11106:11237   */\n      tag_226\n        /* \"#utility.yul\":11232:11236   */\n      dup2\n        /* \"#utility.yul\":11106:11237   */\n      tag_109\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":11098:11237   */\n      swap1\n      pop\n        /* \"#utility.yul\":10825:11244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11250:11430   */\n    tag_110:\n        /* \"#utility.yul\":11298:11375   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11295:11296   */\n      0x00\n        /* \"#utility.yul\":11288:11376   */\n      mstore\n        /* \"#utility.yul\":11395:11399   */\n      0x11\n        /* \"#utility.yul\":11392:11393   */\n      0x04\n        /* \"#utility.yul\":11385:11400   */\n      mstore\n        /* \"#utility.yul\":11419:11423   */\n      0x24\n        /* \"#utility.yul\":11416:11417   */\n      0x00\n        /* \"#utility.yul\":11409:11424   */\n      revert\n        /* \"#utility.yul\":11436:11630   */\n    tag_59:\n        /* \"#utility.yul\":11476:11480   */\n      0x00\n        /* \"#utility.yul\":11496:11516   */\n      tag_229\n        /* \"#utility.yul\":11514:11515   */\n      dup3\n        /* \"#utility.yul\":11496:11516   */\n      tag_81\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":11491:11516   */\n      swap2\n      pop\n        /* \"#utility.yul\":11530:11550   */\n      tag_230\n        /* \"#utility.yul\":11548:11549   */\n      dup4\n        /* \"#utility.yul\":11530:11550   */\n      tag_81\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":11525:11550   */\n      swap3\n      pop\n        /* \"#utility.yul\":11574:11575   */\n      dup3\n        /* \"#utility.yul\":11571:11572   */\n      dup3\n        /* \"#utility.yul\":11567:11576   */\n      sub\n        /* \"#utility.yul\":11559:11576   */\n      swap1\n      pop\n        /* \"#utility.yul\":11598:11599   */\n      dup2\n        /* \"#utility.yul\":11592:11596   */\n      dup2\n        /* \"#utility.yul\":11589:11600   */\n      gt\n        /* \"#utility.yul\":11586:11623   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":11603:11621   */\n      tag_232\n      tag_110\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":11586:11623   */\n    tag_231:\n        /* \"#utility.yul\":11436:11630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11636:12046   */\n    tag_63:\n        /* \"#utility.yul\":11676:11683   */\n      0x00\n        /* \"#utility.yul\":11699:11719   */\n      tag_234\n        /* \"#utility.yul\":11717:11718   */\n      dup3\n        /* \"#utility.yul\":11699:11719   */\n      tag_81\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":11694:11719   */\n      swap2\n      pop\n        /* \"#utility.yul\":11733:11753   */\n      tag_235\n        /* \"#utility.yul\":11751:11752   */\n      dup4\n        /* \"#utility.yul\":11733:11753   */\n      tag_81\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":11728:11753   */\n      swap3\n      pop\n        /* \"#utility.yul\":11788:11789   */\n      dup3\n        /* \"#utility.yul\":11785:11786   */\n      dup3\n        /* \"#utility.yul\":11781:11790   */\n      mul\n        /* \"#utility.yul\":11810:11840   */\n      tag_236\n        /* \"#utility.yul\":11828:11839   */\n      dup2\n        /* \"#utility.yul\":11810:11840   */\n      tag_81\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":11799:11840   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11990   */\n      dup3\n        /* \"#utility.yul\":11980:11987   */\n      dup3\n        /* \"#utility.yul\":11976:11991   */\n      div\n        /* \"#utility.yul\":11973:11974   */\n      dup5\n        /* \"#utility.yul\":11970:11992   */\n      eq\n        /* \"#utility.yul\":11950:11951   */\n      dup4\n        /* \"#utility.yul\":11943:11952   */\n      iszero\n        /* \"#utility.yul\":11923:12006   */\n      or\n        /* \"#utility.yul\":11900:12039   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":12019:12037   */\n      tag_238\n      tag_110\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":11900:12039   */\n    tag_237:\n        /* \"#utility.yul\":11684:12046   */\n      pop\n        /* \"#utility.yul\":11636:12046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12052:12232   */\n    tag_111:\n        /* \"#utility.yul\":12100:12177   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12097:12098   */\n      0x00\n        /* \"#utility.yul\":12090:12178   */\n      mstore\n        /* \"#utility.yul\":12197:12201   */\n      0x12\n        /* \"#utility.yul\":12194:12195   */\n      0x04\n        /* \"#utility.yul\":12187:12202   */\n      mstore\n        /* \"#utility.yul\":12221:12225   */\n      0x24\n        /* \"#utility.yul\":12218:12219   */\n      0x00\n        /* \"#utility.yul\":12211:12226   */\n      revert\n        /* \"#utility.yul\":12238:12423   */\n    tag_66:\n        /* \"#utility.yul\":12278:12279   */\n      0x00\n        /* \"#utility.yul\":12295:12315   */\n      tag_241\n        /* \"#utility.yul\":12313:12314   */\n      dup3\n        /* \"#utility.yul\":12295:12315   */\n      tag_81\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":12290:12315   */\n      swap2\n      pop\n        /* \"#utility.yul\":12329:12349   */\n      tag_242\n        /* \"#utility.yul\":12347:12348   */\n      dup4\n        /* \"#utility.yul\":12329:12349   */\n      tag_81\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":12324:12349   */\n      swap3\n      pop\n        /* \"#utility.yul\":12368:12369   */\n      dup3\n        /* \"#utility.yul\":12358:12393   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":12373:12391   */\n      tag_244\n      tag_111\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":12358:12393   */\n    tag_243:\n        /* \"#utility.yul\":12415:12416   */\n      dup3\n        /* \"#utility.yul\":12412:12413   */\n      dup3\n        /* \"#utility.yul\":12408:12417   */\n      div\n        /* \"#utility.yul\":12403:12417   */\n      swap1\n      pop\n        /* \"#utility.yul\":12238:12423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c18141fa4914bf0459fa4aac3ff57a75d2222489519cd7f61eb87e8ebbc9307564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_293": {
									"entryPoint": null,
									"id": 293,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:6",
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051610df4380380610df4833981810160405281019061003191906100fe565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505061013c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100cd826100a4565b9050919050565b6100dd816100c3565b81146100e7575f80fd5b50565b5f815190506100f8816100d4565b92915050565b5f8060408385031215610114576101136100a0565b5b5f610121858286016100ea565b9250506020610132858286016100ea565b9150509250929050565b60805160a051610c8961016b5f395f6101df01525f8181610155015281816102b501526103f30152610c895ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063150b7a021461004e5780632e17de781461007e578063584b62a11461009a578063a694fc3a146100ca575b5f80fd5b610068600480360381019061006391906107c1565b6100e6565b604051610075919061087b565b60405180910390f35b61009860048036038101906100939190610894565b6100f9565b005b6100b460048036038101906100af91906108bf565b61027d565b6040516100c1919061090c565b60405180910390f35b6100e460048036038101906100df9190610894565b61029c565b005b5f63150b7a0260e01b9050949350505050565b5f6101038261047e565b90505f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f90557f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033856040518463ffffffff1660e01b81526004016101b093929190610967565b5f604051808303815f87803b1580156101c7575f80fd5b505af11580156101d9573d5f803e3d5ffd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102389291906109af565b6020604051808303815f875af1158015610254573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102789190610a0b565b505050565b5f602052815f5260405f20602052805f5260405f205f91509150505481565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161030c919061090c565b602060405180830381865afa158015610327573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034b9190610a4a565b73ffffffffffffffffffffffffffffffffffffffff16146103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890610acf565b60405180910390fd5b425f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330846040518463ffffffff1660e01b815260040161044e93929190610967565b5f604051808303815f87803b158015610465575f80fd5b505af1158015610477573d5f803e3d5ffd5b5050505050565b5f805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20541161050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390610b37565b60405180910390fd5b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f2054426105649190610b82565b90505f603c670de0b6b3a76400008361057c856105a6565b6105869190610bb5565b6105909190610bb5565b61059a9190610c23565b90508092505050919050565b5f603c8210156105b8575f90506105e2565b60b48210156105ca57600390506105e2565b61012c8210156105dd57600590506105e2565b600a90505b919050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610621826105f8565b9050919050565b61063181610617565b811461063b575f80fd5b50565b5f8135905061064c81610628565b92915050565b5f819050919050565b61066481610652565b811461066e575f80fd5b50565b5f8135905061067f8161065b565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106d38261068d565b810181811067ffffffffffffffff821117156106f2576106f161069d565b5b80604052505050565b5f6107046105e7565b905061071082826106ca565b919050565b5f67ffffffffffffffff82111561072f5761072e61069d565b5b6107388261068d565b9050602081019050919050565b828183375f83830152505050565b5f61076561076084610715565b6106fb565b90508281526020810184848401111561078157610780610689565b5b61078c848285610745565b509392505050565b5f82601f8301126107a8576107a7610685565b5b81356107b8848260208601610753565b91505092915050565b5f805f80608085870312156107d9576107d86105f0565b5b5f6107e68782880161063e565b94505060206107f78782880161063e565b935050604061080887828801610671565b925050606085013567ffffffffffffffff811115610829576108286105f4565b5b61083587828801610794565b91505092959194509250565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61087581610841565b82525050565b5f60208201905061088e5f83018461086c565b92915050565b5f602082840312156108a9576108a86105f0565b5b5f6108b684828501610671565b91505092915050565b5f80604083850312156108d5576108d46105f0565b5b5f6108e28582860161063e565b92505060206108f385828601610671565b9150509250929050565b61090681610652565b82525050565b5f60208201905061091f5f8301846108fd565b92915050565b61092e81610617565b82525050565b5f82825260208201905092915050565b50565b5f6109525f83610934565b915061095d82610944565b5f82019050919050565b5f60808201905061097a5f830186610925565b6109876020830185610925565b61099460408301846108fd565b81810360608301526109a581610947565b9050949350505050565b5f6040820190506109c25f830185610925565b6109cf60208301846108fd565b9392505050565b5f8115159050919050565b6109ea816109d6565b81146109f4575f80fd5b50565b5f81519050610a05816109e1565b92915050565b5f60208284031215610a2057610a1f6105f0565b5b5f610a2d848285016109f7565b91505092915050565b5f81519050610a4481610628565b92915050565b5f60208284031215610a5f57610a5e6105f0565b5b5f610a6c84828501610a36565b91505092915050565b5f82825260208201905092915050565b7f596f7520646f6e2774206f776e2074686973204e4654000000000000000000005f82015250565b5f610ab9601683610a75565b9150610ac482610a85565b602082019050919050565b5f6020820190508181035f830152610ae681610aad565b9050919050565b7f4e667420686173206e6f74206265656e207374616b65640000000000000000005f82015250565b5f610b21601783610a75565b9150610b2c82610aed565b602082019050919050565b5f6020820190508181035f830152610b4e81610b15565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b8c82610652565b9150610b9783610652565b9250828203905081811115610baf57610bae610b55565b5b92915050565b5f610bbf82610652565b9150610bca83610652565b9250828202610bd881610652565b91508282048414831517610bef57610bee610b55565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c2d82610652565b9150610c3883610652565b925082610c4857610c47610bf6565b5b82820490509291505056fea2646970667358221220c18141fa4914bf0459fa4aac3ff57a75d2222489519cd7f61eb87e8ebbc9307564736f6c63430008190033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDF4 CODESIZE SUB DUP1 PUSH2 0xDF4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x13C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD DUP3 PUSH2 0xA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD DUP2 PUSH2 0xC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0xD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0xA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xC89 PUSH2 0x16B PUSH0 CODECOPY PUSH0 PUSH2 0x1DF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x155 ADD MSTORE DUP2 DUP2 PUSH2 0x2B5 ADD MSTORE PUSH2 0x3F3 ADD MSTORE PUSH2 0xC89 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xCA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x103 DUP3 PUSH2 0x47E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP3 SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x254 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x503 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x564 SWAP2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3C PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x57C DUP6 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x590 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x59A SWAP2 SWAP1 PUSH2 0xC23 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3C DUP3 LT ISZERO PUSH2 0x5B8 JUMPI PUSH0 SWAP1 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xB4 DUP3 LT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x12C DUP3 LT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x621 DUP3 PUSH2 0x5F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x631 DUP2 PUSH2 0x617 JUMP JUMPDEST DUP2 EQ PUSH2 0x63B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64C DUP2 PUSH2 0x628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x652 JUMP JUMPDEST DUP2 EQ PUSH2 0x66E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x67F DUP2 PUSH2 0x65B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x6D3 DUP3 PUSH2 0x68D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F1 PUSH2 0x69D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x704 PUSH2 0x5E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x710 DUP3 DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x72F JUMPI PUSH2 0x72E PUSH2 0x69D JUMP JUMPDEST JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x765 PUSH2 0x760 DUP5 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x781 JUMPI PUSH2 0x780 PUSH2 0x689 JUMP JUMPDEST JUMPDEST PUSH2 0x78C DUP5 DUP3 DUP6 PUSH2 0x745 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7A8 JUMPI PUSH2 0x7A7 PUSH2 0x685 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7B8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E6 DUP8 DUP3 DUP9 ADD PUSH2 0x63E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x7F7 DUP8 DUP3 DUP9 ADD PUSH2 0x63E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x808 DUP8 DUP3 DUP9 ADD PUSH2 0x671 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x829 JUMPI PUSH2 0x828 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST PUSH2 0x835 DUP8 DUP3 DUP9 ADD PUSH2 0x794 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88E PUSH0 DUP4 ADD DUP5 PUSH2 0x86C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B6 DUP5 DUP3 DUP6 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D5 JUMPI PUSH2 0x8D4 PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8E2 DUP6 DUP3 DUP7 ADD PUSH2 0x63E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8F3 DUP6 DUP3 DUP7 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x906 DUP2 PUSH2 0x652 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91F PUSH0 DUP4 ADD DUP5 PUSH2 0x8FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92E DUP2 PUSH2 0x617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x952 PUSH0 DUP4 PUSH2 0x934 JUMP JUMPDEST SWAP2 POP PUSH2 0x95D DUP3 PUSH2 0x944 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x97A PUSH0 DUP4 ADD DUP7 PUSH2 0x925 JUMP JUMPDEST PUSH2 0x987 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x925 JUMP JUMPDEST PUSH2 0x994 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x9A5 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9C2 PUSH0 DUP4 ADD DUP6 PUSH2 0x925 JUMP JUMPDEST PUSH2 0x9CF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EA DUP2 PUSH2 0x9D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0x9E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA1F PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA2D DUP5 DUP3 DUP6 ADD PUSH2 0x9F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA44 DUP2 PUSH2 0x628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5E PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA6C DUP5 DUP3 DUP6 ADD PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206F776E2074686973204E465400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB9 PUSH1 0x16 DUP4 PUSH2 0xA75 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC4 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE6 DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E667420686173206E6F74206265656E207374616B6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB21 PUSH1 0x17 DUP4 PUSH2 0xA75 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2C DUP3 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4E DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB8C DUP3 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0xB97 DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBAF JUMPI PUSH2 0xBAE PUSH2 0xB55 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBF DUP3 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCA DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBD8 DUP2 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xB55 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC2D DUP3 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0xC38 DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC48 JUMPI PUSH2 0xC47 PUSH2 0xBF6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP2 COINBASE STATICCALL BLOBHASH EQ 0xBF DIV MSIZE STATICCALL BLOBBASEFEE 0xAC EXTCODEHASH CREATE2 PUSH27 0x75D2222489519CD7F61EB87E8EBBC9307564736F6C634300081900 CALLER ",
							"sourceMap": "313:1510:5:-:0;;;496:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:4;548:19;;;;;;;;;;592:6;577:22;;;;;;;;;;496:110;;313:1510;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;313:1510:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateReward_423": {
									"entryPoint": 1150,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculate_455": {
									"entryPoint": 1446,
									"id": 455,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC721Received_238": {
									"entryPoint": 230,
									"id": 238,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@stake_333": {
									"entryPoint": 668,
									"id": 333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_273": {
									"entryPoint": 637,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_374": {
									"entryPoint": 249,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b": {
									"entryPoint": 2797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12426:6",
										"nodeType": "YulBlock",
										"src": "0:12426:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1286:28:6",
													"nodeType": "YulBlock",
													"src": "1286:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1303:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1306:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1296:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:6"
																},
																"nativeSrc": "1296:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1296:12:6"
															},
															"nativeSrc": "1296:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1197:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:6"
											},
											{
												"body": {
													"nativeSrc": "1409:28:6",
													"nodeType": "YulBlock",
													"src": "1409:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1426:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1419:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:6"
																},
																"nativeSrc": "1419:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1419:12:6"
															},
															"nativeSrc": "1419:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1320:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:6"
											},
											{
												"body": {
													"nativeSrc": "1491:54:6",
													"nodeType": "YulBlock",
													"src": "1491:54:6",
													"statements": [
														{
															"nativeSrc": "1501:38:6",
															"nodeType": "YulAssignment",
															"src": "1501:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1519:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1519:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1526:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1515:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:6"
																		},
																		"nativeSrc": "1515:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1515:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1535:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1531:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:6"
																		},
																		"nativeSrc": "1531:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1511:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:6"
																},
																"nativeSrc": "1511:28:6",
																"nodeType": "YulFunctionCall",
																"src": "1511:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1501:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1443:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1474:5:6",
														"nodeType": "YulTypedName",
														"src": "1474:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1484:6:6",
														"nodeType": "YulTypedName",
														"src": "1484:6:6",
														"type": ""
													}
												],
												"src": "1443:102:6"
											},
											{
												"body": {
													"nativeSrc": "1579:152:6",
													"nodeType": "YulBlock",
													"src": "1579:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:6"
																},
																"nativeSrc": "1589:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1589:88:6"
															},
															"nativeSrc": "1589:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1693:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1696:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:6"
																},
																"nativeSrc": "1686:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1686:15:6"
															},
															"nativeSrc": "1686:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1717:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1720:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1710:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:6"
																},
																"nativeSrc": "1710:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1710:15:6"
															},
															"nativeSrc": "1710:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1551:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:6"
											},
											{
												"body": {
													"nativeSrc": "1780:238:6",
													"nodeType": "YulBlock",
													"src": "1780:238:6",
													"statements": [
														{
															"nativeSrc": "1790:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1790:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1812:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1842:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1842:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1820:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "1820:21:6"
																		},
																		"nativeSrc": "1820:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1820:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1808:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:6"
																},
																"nativeSrc": "1808:40:6",
																"nodeType": "YulFunctionCall",
																"src": "1808:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1794:10:6",
																	"nodeType": "YulTypedName",
																	"src": "1794:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1959:22:6",
																"nodeType": "YulBlock",
																"src": "1959:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1961:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:6"
																			},
																			"nativeSrc": "1961:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:6"
																		},
																		"nativeSrc": "1961:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1902:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1902:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1914:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1914:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1899:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:6"
																		},
																		"nativeSrc": "1899:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1899:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1938:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1938:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1950:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:6"
																		},
																		"nativeSrc": "1935:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1896:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1896:2:6"
																},
																"nativeSrc": "1896:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1896:62:6"
															},
															"nativeSrc": "1893:88:6",
															"nodeType": "YulIf",
															"src": "1893:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1997:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2001:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2001:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1990:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:6"
																},
																"nativeSrc": "1990:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1990:22:6"
															},
															"nativeSrc": "1990:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1990:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1737:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1766:6:6",
														"nodeType": "YulTypedName",
														"src": "1766:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1774:4:6",
														"nodeType": "YulTypedName",
														"src": "1774:4:6",
														"type": ""
													}
												],
												"src": "1737:281:6"
											},
											{
												"body": {
													"nativeSrc": "2065:88:6",
													"nodeType": "YulBlock",
													"src": "2065:88:6",
													"statements": [
														{
															"nativeSrc": "2075:30:6",
															"nodeType": "YulAssignment",
															"src": "2075:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2085:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:6"
																},
																"nativeSrc": "2085:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2085:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2075:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2134:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2142:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2142:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2114:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "2114:19:6"
																},
																"nativeSrc": "2114:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2114:33:6"
															},
															"nativeSrc": "2114:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2114:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2024:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2049:4:6",
														"nodeType": "YulTypedName",
														"src": "2049:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2058:6:6",
														"nodeType": "YulTypedName",
														"src": "2058:6:6",
														"type": ""
													}
												],
												"src": "2024:129:6"
											},
											{
												"body": {
													"nativeSrc": "2225:241:6",
													"nodeType": "YulBlock",
													"src": "2225:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2330:22:6",
																"nodeType": "YulBlock",
																"src": "2330:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2332:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2332:16:6"
																			},
																			"nativeSrc": "2332:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2332:18:6"
																		},
																		"nativeSrc": "2332:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2302:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2310:18:6",
																		"nodeType": "YulLiteral",
																		"src": "2310:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2299:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:6"
																},
																"nativeSrc": "2299:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2299:30:6"
															},
															"nativeSrc": "2296:56:6",
															"nodeType": "YulIf",
															"src": "2296:56:6"
														},
														{
															"nativeSrc": "2362:37:6",
															"nodeType": "YulAssignment",
															"src": "2362:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2392:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2370:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "2370:21:6"
																},
																"nativeSrc": "2370:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2370:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:6"
																}
															]
														},
														{
															"nativeSrc": "2436:23:6",
															"nodeType": "YulAssignment",
															"src": "2436:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2448:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2448:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2454:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2444:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:6"
																},
																"nativeSrc": "2444:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2444:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2436:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "2159:307:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2209:6:6",
														"nodeType": "YulTypedName",
														"src": "2209:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2220:4:6",
														"nodeType": "YulTypedName",
														"src": "2220:4:6",
														"type": ""
													}
												],
												"src": "2159:307:6"
											},
											{
												"body": {
													"nativeSrc": "2536:84:6",
													"nodeType": "YulBlock",
													"src": "2536:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2560:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2560:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2565:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2565:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2570:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2570:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2547:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2547:12:6"
																},
																"nativeSrc": "2547:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2547:30:6"
															},
															"nativeSrc": "2547:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2547:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2597:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2597:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2602:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2602:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2593:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:6"
																		},
																		"nativeSrc": "2593:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2593:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2611:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2611:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2586:6:6"
																},
																"nativeSrc": "2586:27:6",
																"nodeType": "YulFunctionCall",
																"src": "2586:27:6"
															},
															"nativeSrc": "2586:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "2586:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2472:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2518:3:6",
														"nodeType": "YulTypedName",
														"src": "2518:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2523:3:6",
														"nodeType": "YulTypedName",
														"src": "2523:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2528:6:6",
														"nodeType": "YulTypedName",
														"src": "2528:6:6",
														"type": ""
													}
												],
												"src": "2472:148:6"
											},
											{
												"body": {
													"nativeSrc": "2709:340:6",
													"nodeType": "YulBlock",
													"src": "2709:340:6",
													"statements": [
														{
															"nativeSrc": "2719:74:6",
															"nodeType": "YulAssignment",
															"src": "2719:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2785:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "2744:40:6",
																			"nodeType": "YulIdentifier",
																			"src": "2744:40:6"
																		},
																		"nativeSrc": "2744:48:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:48:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2728:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "2728:15:6"
																},
																"nativeSrc": "2728:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2728:65:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2719:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2719:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2809:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2809:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2816:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2816:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2802:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:6"
																},
																"nativeSrc": "2802:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2802:21:6"
															},
															"nativeSrc": "2802:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2802:21:6"
														},
														{
															"nativeSrc": "2832:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2832:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2847:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2847:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2854:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2854:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2843:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2843:3:6"
																},
																"nativeSrc": "2843:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2843:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2836:3:6",
																	"nodeType": "YulTypedName",
																	"src": "2836:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2897:83:6",
																"nodeType": "YulBlock",
																"src": "2897:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2899:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2899:77:6"
																			},
																			"nativeSrc": "2899:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2899:79:6"
																		},
																		"nativeSrc": "2899:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2899:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2878:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2878:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2883:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2883:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2874:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:6"
																		},
																		"nativeSrc": "2874:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2892:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2892:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2871:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2871:2:6"
																},
																"nativeSrc": "2871:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2871:25:6"
															},
															"nativeSrc": "2868:112:6",
															"nodeType": "YulIf",
															"src": "2868:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3026:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3026:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3031:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3031:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3036:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3036:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2989:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "2989:36:6"
																},
																"nativeSrc": "2989:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2989:54:6"
															},
															"nativeSrc": "2989:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "2989:54:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "2626:423:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2682:3:6",
														"nodeType": "YulTypedName",
														"src": "2682:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2687:6:6",
														"nodeType": "YulTypedName",
														"src": "2687:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2695:3:6",
														"nodeType": "YulTypedName",
														"src": "2695:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2703:5:6",
														"nodeType": "YulTypedName",
														"src": "2703:5:6",
														"type": ""
													}
												],
												"src": "2626:423:6"
											},
											{
												"body": {
													"nativeSrc": "3129:277:6",
													"nodeType": "YulBlock",
													"src": "3129:277:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3178:83:6",
																"nodeType": "YulBlock",
																"src": "3178:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3180:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3180:77:6"
																			},
																			"nativeSrc": "3180:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3180:79:6"
																		},
																		"nativeSrc": "3180:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3157:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3157:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3165:4:6",
																						"nodeType": "YulLiteral",
																						"src": "3165:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3153:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3153:3:6"
																				},
																				"nativeSrc": "3153:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3153:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3172:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3172:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3149:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:6"
																		},
																		"nativeSrc": "3149:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3142:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:6"
																},
																"nativeSrc": "3142:35:6",
																"nodeType": "YulFunctionCall",
																"src": "3142:35:6"
															},
															"nativeSrc": "3139:122:6",
															"nodeType": "YulIf",
															"src": "3139:122:6"
														},
														{
															"nativeSrc": "3270:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3270:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3297:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3297:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3284:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3284:12:6"
																},
																"nativeSrc": "3284:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3284:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3274:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3274:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3313:87:6",
															"nodeType": "YulAssignment",
															"src": "3313:87:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3373:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3373:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3381:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3381:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3369:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3369:3:6"
																		},
																		"nativeSrc": "3369:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3369:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3388:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3388:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3396:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3396:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "3322:46:6",
																	"nodeType": "YulIdentifier",
																	"src": "3322:46:6"
																},
																"nativeSrc": "3322:78:6",
																"nodeType": "YulFunctionCall",
																"src": "3322:78:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3313:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3313:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "3068:338:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3107:6:6",
														"nodeType": "YulTypedName",
														"src": "3107:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3115:3:6",
														"nodeType": "YulTypedName",
														"src": "3115:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3123:5:6",
														"nodeType": "YulTypedName",
														"src": "3123:5:6",
														"type": ""
													}
												],
												"src": "3068:338:6"
											},
											{
												"body": {
													"nativeSrc": "3538:817:6",
													"nodeType": "YulBlock",
													"src": "3538:817:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3585:83:6",
																"nodeType": "YulBlock",
																"src": "3585:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3587:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3587:77:6"
																			},
																			"nativeSrc": "3587:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:79:6"
																		},
																		"nativeSrc": "3587:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3559:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3559:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3568:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3555:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:6"
																		},
																		"nativeSrc": "3555:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3580:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3551:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3551:3:6"
																},
																"nativeSrc": "3551:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3551:33:6"
															},
															"nativeSrc": "3548:120:6",
															"nodeType": "YulIf",
															"src": "3548:120:6"
														},
														{
															"nativeSrc": "3678:117:6",
															"nodeType": "YulBlock",
															"src": "3678:117:6",
															"statements": [
																{
																	"nativeSrc": "3693:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3693:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3707:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3707:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3697:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3697:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3722:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3722:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3757:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3757:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3768:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3768:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3753:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3753:3:6"
																				},
																				"nativeSrc": "3753:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3753:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3777:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3777:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3732:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3732:20:6"
																		},
																		"nativeSrc": "3732:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3732:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3722:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3722:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3805:118:6",
															"nodeType": "YulBlock",
															"src": "3805:118:6",
															"statements": [
																{
																	"nativeSrc": "3820:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3820:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3834:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3834:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3824:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3824:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3850:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3850:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3885:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3885:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3896:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3896:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3881:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3881:3:6"
																				},
																				"nativeSrc": "3881:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3881:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3905:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3905:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3860:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3860:20:6"
																		},
																		"nativeSrc": "3860:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3850:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3933:118:6",
															"nodeType": "YulBlock",
															"src": "3933:118:6",
															"statements": [
																{
																	"nativeSrc": "3948:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3948:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3962:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3962:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3952:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3952:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3978:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3978:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4013:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4013:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4024:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4024:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4009:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4009:3:6"
																				},
																				"nativeSrc": "4009:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4009:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4033:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4033:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3988:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3988:20:6"
																		},
																		"nativeSrc": "3988:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3988:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3978:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3978:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4061:287:6",
															"nodeType": "YulBlock",
															"src": "4061:287:6",
															"statements": [
																{
																	"nativeSrc": "4076:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4076:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4107:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4107:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4118:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4118:2:6",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4103:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4103:3:6"
																				},
																				"nativeSrc": "4103:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4090:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "4090:12:6"
																		},
																		"nativeSrc": "4090:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4090:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4169:83:6",
																		"nodeType": "YulBlock",
																		"src": "4169:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4171:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4171:77:6"
																					},
																					"nativeSrc": "4171:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4171:79:6"
																				},
																				"nativeSrc": "4171:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4171:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4141:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4141:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4149:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4149:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4138:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4138:2:6"
																		},
																		"nativeSrc": "4138:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4138:30:6"
																	},
																	"nativeSrc": "4135:117:6",
																	"nodeType": "YulIf",
																	"src": "4135:117:6"
																},
																{
																	"nativeSrc": "4266:72:6",
																	"nodeType": "YulAssignment",
																	"src": "4266:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4310:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4310:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4321:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4321:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4306:3:6"
																				},
																				"nativeSrc": "4306:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4306:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4330:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4330:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "4276:29:6",
																			"nodeType": "YulIdentifier",
																			"src": "4276:29:6"
																		},
																		"nativeSrc": "4276:62:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4276:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4266:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4266:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3412:943:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3484:9:6",
														"nodeType": "YulTypedName",
														"src": "3484:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3495:7:6",
														"nodeType": "YulTypedName",
														"src": "3495:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3507:6:6",
														"nodeType": "YulTypedName",
														"src": "3507:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3515:6:6",
														"nodeType": "YulTypedName",
														"src": "3515:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3523:6:6",
														"nodeType": "YulTypedName",
														"src": "3523:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3531:6:6",
														"nodeType": "YulTypedName",
														"src": "3531:6:6",
														"type": ""
													}
												],
												"src": "3412:943:6"
											},
											{
												"body": {
													"nativeSrc": "4405:105:6",
													"nodeType": "YulBlock",
													"src": "4405:105:6",
													"statements": [
														{
															"nativeSrc": "4415:89:6",
															"nodeType": "YulAssignment",
															"src": "4415:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4430:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4430:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4437:66:6",
																		"nodeType": "YulLiteral",
																		"src": "4437:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4426:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:6"
																},
																"nativeSrc": "4426:78:6",
																"nodeType": "YulFunctionCall",
																"src": "4426:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4415:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4415:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "4361:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4387:5:6",
														"nodeType": "YulTypedName",
														"src": "4387:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4397:7:6",
														"nodeType": "YulTypedName",
														"src": "4397:7:6",
														"type": ""
													}
												],
												"src": "4361:149:6"
											},
											{
												"body": {
													"nativeSrc": "4579:52:6",
													"nodeType": "YulBlock",
													"src": "4579:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4596:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4596:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4618:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4618:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "4601:16:6",
																			"nodeType": "YulIdentifier",
																			"src": "4601:16:6"
																		},
																		"nativeSrc": "4601:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4601:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4589:6:6"
																},
																"nativeSrc": "4589:36:6",
																"nodeType": "YulFunctionCall",
																"src": "4589:36:6"
															},
															"nativeSrc": "4589:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "4589:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "4516:115:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4567:5:6",
														"nodeType": "YulTypedName",
														"src": "4567:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4574:3:6",
														"nodeType": "YulTypedName",
														"src": "4574:3:6",
														"type": ""
													}
												],
												"src": "4516:115:6"
											},
											{
												"body": {
													"nativeSrc": "4733:122:6",
													"nodeType": "YulBlock",
													"src": "4733:122:6",
													"statements": [
														{
															"nativeSrc": "4743:26:6",
															"nodeType": "YulAssignment",
															"src": "4743:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4755:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4755:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4766:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4751:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4751:3:6"
																},
																"nativeSrc": "4751:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4751:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4743:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4743:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4821:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4821:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4834:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4834:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4845:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4845:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4830:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:6"
																		},
																		"nativeSrc": "4830:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4830:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "4779:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "4779:41:6"
																},
																"nativeSrc": "4779:69:6",
																"nodeType": "YulFunctionCall",
																"src": "4779:69:6"
															},
															"nativeSrc": "4779:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "4779:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "4637:218:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4705:9:6",
														"nodeType": "YulTypedName",
														"src": "4705:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4717:6:6",
														"nodeType": "YulTypedName",
														"src": "4717:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4728:4:6",
														"nodeType": "YulTypedName",
														"src": "4728:4:6",
														"type": ""
													}
												],
												"src": "4637:218:6"
											},
											{
												"body": {
													"nativeSrc": "4927:263:6",
													"nodeType": "YulBlock",
													"src": "4927:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4973:83:6",
																"nodeType": "YulBlock",
																"src": "4973:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4975:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4975:77:6"
																			},
																			"nativeSrc": "4975:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4975:79:6"
																		},
																		"nativeSrc": "4975:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4975:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4948:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4948:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4957:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4957:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4944:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4944:3:6"
																		},
																		"nativeSrc": "4944:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4944:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4969:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4940:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4940:3:6"
																},
																"nativeSrc": "4940:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4940:32:6"
															},
															"nativeSrc": "4937:119:6",
															"nodeType": "YulIf",
															"src": "4937:119:6"
														},
														{
															"nativeSrc": "5066:117:6",
															"nodeType": "YulBlock",
															"src": "5066:117:6",
															"statements": [
																{
																	"nativeSrc": "5081:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5081:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5095:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5095:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5085:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5085:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5110:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5110:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5145:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5145:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5156:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5156:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5141:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5141:3:6"
																				},
																				"nativeSrc": "5141:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5141:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5165:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5165:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5120:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5120:20:6"
																		},
																		"nativeSrc": "5120:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5120:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5110:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5110:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4861:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4897:9:6",
														"nodeType": "YulTypedName",
														"src": "4897:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4908:7:6",
														"nodeType": "YulTypedName",
														"src": "4908:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4920:6:6",
														"nodeType": "YulTypedName",
														"src": "4920:6:6",
														"type": ""
													}
												],
												"src": "4861:329:6"
											},
											{
												"body": {
													"nativeSrc": "5279:391:6",
													"nodeType": "YulBlock",
													"src": "5279:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5325:83:6",
																"nodeType": "YulBlock",
																"src": "5325:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5327:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5327:77:6"
																			},
																			"nativeSrc": "5327:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5327:79:6"
																		},
																		"nativeSrc": "5327:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5327:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5300:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5300:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5309:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5309:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5296:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5296:3:6"
																		},
																		"nativeSrc": "5296:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5296:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5321:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5321:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5292:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5292:3:6"
																},
																"nativeSrc": "5292:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5292:32:6"
															},
															"nativeSrc": "5289:119:6",
															"nodeType": "YulIf",
															"src": "5289:119:6"
														},
														{
															"nativeSrc": "5418:117:6",
															"nodeType": "YulBlock",
															"src": "5418:117:6",
															"statements": [
																{
																	"nativeSrc": "5433:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5433:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5447:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5447:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5437:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5437:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5462:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5462:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5497:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5497:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5508:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5508:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5493:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5493:3:6"
																				},
																				"nativeSrc": "5493:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5493:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5517:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5517:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5472:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5472:20:6"
																		},
																		"nativeSrc": "5472:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5462:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5462:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5545:118:6",
															"nodeType": "YulBlock",
															"src": "5545:118:6",
															"statements": [
																{
																	"nativeSrc": "5560:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5560:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5574:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5574:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5564:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5564:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5590:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5590:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5625:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5625:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5636:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5636:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5621:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5621:3:6"
																				},
																				"nativeSrc": "5621:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5621:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5645:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5645:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5600:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5600:20:6"
																		},
																		"nativeSrc": "5600:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5600:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5590:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5590:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5196:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5241:9:6",
														"nodeType": "YulTypedName",
														"src": "5241:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5252:7:6",
														"nodeType": "YulTypedName",
														"src": "5252:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5264:6:6",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5272:6:6",
														"nodeType": "YulTypedName",
														"src": "5272:6:6",
														"type": ""
													}
												],
												"src": "5196:474:6"
											},
											{
												"body": {
													"nativeSrc": "5741:53:6",
													"nodeType": "YulBlock",
													"src": "5741:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5758:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5758:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5781:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5781:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5763:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5763:17:6"
																		},
																		"nativeSrc": "5763:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5763:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5751:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5751:6:6"
																},
																"nativeSrc": "5751:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5751:37:6"
															},
															"nativeSrc": "5751:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5751:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5676:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:6",
														"nodeType": "YulTypedName",
														"src": "5729:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5736:3:6",
														"nodeType": "YulTypedName",
														"src": "5736:3:6",
														"type": ""
													}
												],
												"src": "5676:118:6"
											},
											{
												"body": {
													"nativeSrc": "5898:124:6",
													"nodeType": "YulBlock",
													"src": "5898:124:6",
													"statements": [
														{
															"nativeSrc": "5908:26:6",
															"nodeType": "YulAssignment",
															"src": "5908:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5920:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5920:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5931:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5916:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5916:3:6"
																},
																"nativeSrc": "5916:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5916:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5908:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5908:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5988:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5988:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6001:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6001:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6012:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6012:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5997:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5997:3:6"
																		},
																		"nativeSrc": "5997:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5997:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5944:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5944:43:6"
																},
																"nativeSrc": "5944:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5944:71:6"
															},
															"nativeSrc": "5944:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5944:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5800:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5870:9:6",
														"nodeType": "YulTypedName",
														"src": "5870:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5882:6:6",
														"nodeType": "YulTypedName",
														"src": "5882:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5893:4:6",
														"nodeType": "YulTypedName",
														"src": "5893:4:6",
														"type": ""
													}
												],
												"src": "5800:222:6"
											},
											{
												"body": {
													"nativeSrc": "6093:53:6",
													"nodeType": "YulBlock",
													"src": "6093:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6110:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6110:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6133:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6133:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6115:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6115:17:6"
																		},
																		"nativeSrc": "6115:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6103:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6103:6:6"
																},
																"nativeSrc": "6103:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6103:37:6"
															},
															"nativeSrc": "6103:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6103:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6028:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6081:5:6",
														"nodeType": "YulTypedName",
														"src": "6081:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6088:3:6",
														"nodeType": "YulTypedName",
														"src": "6088:3:6",
														"type": ""
													}
												],
												"src": "6028:118:6"
											},
											{
												"body": {
													"nativeSrc": "6247:73:6",
													"nodeType": "YulBlock",
													"src": "6247:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6264:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6264:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6269:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6269:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6257:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6257:6:6"
																},
																"nativeSrc": "6257:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6257:19:6"
															},
															"nativeSrc": "6257:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "6257:19:6"
														},
														{
															"nativeSrc": "6285:29:6",
															"nodeType": "YulAssignment",
															"src": "6285:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6304:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6304:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6309:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6309:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6300:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6300:3:6"
																},
																"nativeSrc": "6300:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6300:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6285:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "6285:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "6152:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6219:3:6",
														"nodeType": "YulTypedName",
														"src": "6219:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6224:6:6",
														"nodeType": "YulTypedName",
														"src": "6224:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6235:11:6",
														"nodeType": "YulTypedName",
														"src": "6235:11:6",
														"type": ""
													}
												],
												"src": "6152:168:6"
											},
											{
												"body": {
													"nativeSrc": "6432:8:6",
													"nodeType": "YulBlock",
													"src": "6432:8:6",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "6326:114:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6424:6:6",
														"nodeType": "YulTypedName",
														"src": "6424:6:6",
														"type": ""
													}
												],
												"src": "6326:114:6"
											},
											{
												"body": {
													"nativeSrc": "6591:217:6",
													"nodeType": "YulBlock",
													"src": "6591:217:6",
													"statements": [
														{
															"nativeSrc": "6601:72:6",
															"nodeType": "YulAssignment",
															"src": "6601:72:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6666:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6666:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6671:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6608:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "6608:57:6"
																},
																"nativeSrc": "6608:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6608:65:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6601:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6601:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6771:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6771:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "6682:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6682:88:6"
																},
																"nativeSrc": "6682:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6682:93:6"
															},
															"nativeSrc": "6682:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6682:93:6"
														},
														{
															"nativeSrc": "6784:18:6",
															"nodeType": "YulAssignment",
															"src": "6784:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6795:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6795:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6800:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6800:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6791:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:6"
																},
																"nativeSrc": "6791:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6791:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6784:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "6446:362:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6579:3:6",
														"nodeType": "YulTypedName",
														"src": "6579:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6587:3:6",
														"nodeType": "YulTypedName",
														"src": "6587:3:6",
														"type": ""
													}
												],
												"src": "6446:362:6"
											},
											{
												"body": {
													"nativeSrc": "7068:494:6",
													"nodeType": "YulBlock",
													"src": "7068:494:6",
													"statements": [
														{
															"nativeSrc": "7078:27:6",
															"nodeType": "YulAssignment",
															"src": "7078:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7090:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7090:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7101:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7101:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7086:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:6"
																},
																"nativeSrc": "7086:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7086:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7078:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7078:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7159:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7159:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7172:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7172:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7183:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7183:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7168:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7168:3:6"
																		},
																		"nativeSrc": "7168:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7168:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7115:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7115:43:6"
																},
																"nativeSrc": "7115:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7115:71:6"
															},
															"nativeSrc": "7115:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7115:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7240:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7240:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7253:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7253:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7264:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7264:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7249:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:6"
																		},
																		"nativeSrc": "7249:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7196:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7196:43:6"
																},
																"nativeSrc": "7196:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7196:72:6"
															},
															"nativeSrc": "7196:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7196:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7322:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7322:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7335:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7346:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7346:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7331:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7331:3:6"
																		},
																		"nativeSrc": "7331:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7331:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7278:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7278:43:6"
																},
																"nativeSrc": "7278:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7278:72:6"
															},
															"nativeSrc": "7278:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7278:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7371:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7371:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7382:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7382:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7367:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7367:3:6"
																		},
																		"nativeSrc": "7367:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7367:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7391:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7391:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7397:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7397:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7387:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:6"
																		},
																		"nativeSrc": "7387:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7387:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7360:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7360:6:6"
																},
																"nativeSrc": "7360:48:6",
																"nodeType": "YulFunctionCall",
																"src": "7360:48:6"
															},
															"nativeSrc": "7360:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "7360:48:6"
														},
														{
															"nativeSrc": "7417:138:6",
															"nodeType": "YulAssignment",
															"src": "7417:138:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7550:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "7425:123:6",
																	"nodeType": "YulIdentifier",
																	"src": "7425:123:6"
																},
																"nativeSrc": "7425:130:6",
																"nodeType": "YulFunctionCall",
																"src": "7425:130:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7417:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7417:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6814:748:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7024:9:6",
														"nodeType": "YulTypedName",
														"src": "7024:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7036:6:6",
														"nodeType": "YulTypedName",
														"src": "7036:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7044:6:6",
														"nodeType": "YulTypedName",
														"src": "7044:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7052:6:6",
														"nodeType": "YulTypedName",
														"src": "7052:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7063:4:6",
														"nodeType": "YulTypedName",
														"src": "7063:4:6",
														"type": ""
													}
												],
												"src": "6814:748:6"
											},
											{
												"body": {
													"nativeSrc": "7694:206:6",
													"nodeType": "YulBlock",
													"src": "7694:206:6",
													"statements": [
														{
															"nativeSrc": "7704:26:6",
															"nodeType": "YulAssignment",
															"src": "7704:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7716:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7716:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7727:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7727:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7712:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7712:3:6"
																},
																"nativeSrc": "7712:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7712:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7704:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7704:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7784:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7797:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7797:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7808:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7808:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7793:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:6"
																		},
																		"nativeSrc": "7793:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7793:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7740:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7740:43:6"
																},
																"nativeSrc": "7740:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7740:71:6"
															},
															"nativeSrc": "7740:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7740:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7865:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7865:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7878:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7878:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7889:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7889:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7874:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7874:3:6"
																		},
																		"nativeSrc": "7874:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7874:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7821:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7821:43:6"
																},
																"nativeSrc": "7821:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7821:72:6"
															},
															"nativeSrc": "7821:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7821:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7568:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7658:9:6",
														"nodeType": "YulTypedName",
														"src": "7658:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7670:6:6",
														"nodeType": "YulTypedName",
														"src": "7670:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7678:6:6",
														"nodeType": "YulTypedName",
														"src": "7678:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7689:4:6",
														"nodeType": "YulTypedName",
														"src": "7689:4:6",
														"type": ""
													}
												],
												"src": "7568:332:6"
											},
											{
												"body": {
													"nativeSrc": "7948:48:6",
													"nodeType": "YulBlock",
													"src": "7948:48:6",
													"statements": [
														{
															"nativeSrc": "7958:32:6",
															"nodeType": "YulAssignment",
															"src": "7958:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7983:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7983:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7976:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7976:6:6"
																		},
																		"nativeSrc": "7976:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7976:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7969:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7969:6:6"
																},
																"nativeSrc": "7969:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7969:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7958:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7958:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7906:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7930:5:6",
														"nodeType": "YulTypedName",
														"src": "7930:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7940:7:6",
														"nodeType": "YulTypedName",
														"src": "7940:7:6",
														"type": ""
													}
												],
												"src": "7906:90:6"
											},
											{
												"body": {
													"nativeSrc": "8042:76:6",
													"nodeType": "YulBlock",
													"src": "8042:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8096:16:6",
																"nodeType": "YulBlock",
																"src": "8096:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8105:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8105:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8108:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8108:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8098:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8098:6:6"
																			},
																			"nativeSrc": "8098:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8098:12:6"
																		},
																		"nativeSrc": "8098:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8098:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8065:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8065:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8087:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "8087:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8072:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "8072:14:6"
																				},
																				"nativeSrc": "8072:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8072:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8062:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8062:2:6"
																		},
																		"nativeSrc": "8062:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8062:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8055:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8055:6:6"
																},
																"nativeSrc": "8055:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8055:40:6"
															},
															"nativeSrc": "8052:60:6",
															"nodeType": "YulIf",
															"src": "8052:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8002:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8035:5:6",
														"nodeType": "YulTypedName",
														"src": "8035:5:6",
														"type": ""
													}
												],
												"src": "8002:116:6"
											},
											{
												"body": {
													"nativeSrc": "8184:77:6",
													"nodeType": "YulBlock",
													"src": "8184:77:6",
													"statements": [
														{
															"nativeSrc": "8194:22:6",
															"nodeType": "YulAssignment",
															"src": "8194:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8209:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8209:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8203:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8203:5:6"
																},
																"nativeSrc": "8203:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8203:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8194:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8194:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8249:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8249:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8225:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "8225:23:6"
																},
																"nativeSrc": "8225:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8225:30:6"
															},
															"nativeSrc": "8225:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8225:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8124:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8162:6:6",
														"nodeType": "YulTypedName",
														"src": "8162:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8170:3:6",
														"nodeType": "YulTypedName",
														"src": "8170:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8178:5:6",
														"nodeType": "YulTypedName",
														"src": "8178:5:6",
														"type": ""
													}
												],
												"src": "8124:137:6"
											},
											{
												"body": {
													"nativeSrc": "8341:271:6",
													"nodeType": "YulBlock",
													"src": "8341:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8387:83:6",
																"nodeType": "YulBlock",
																"src": "8387:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8389:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8389:77:6"
																			},
																			"nativeSrc": "8389:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8389:79:6"
																		},
																		"nativeSrc": "8389:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8389:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8362:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8362:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8371:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8371:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8358:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8358:3:6"
																		},
																		"nativeSrc": "8358:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8358:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8383:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8383:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8354:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8354:3:6"
																},
																"nativeSrc": "8354:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8354:32:6"
															},
															"nativeSrc": "8351:119:6",
															"nodeType": "YulIf",
															"src": "8351:119:6"
														},
														{
															"nativeSrc": "8480:125:6",
															"nodeType": "YulBlock",
															"src": "8480:125:6",
															"statements": [
																{
																	"nativeSrc": "8495:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8495:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8509:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8509:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8499:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8499:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8524:71:6",
																	"nodeType": "YulAssignment",
																	"src": "8524:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8567:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8567:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8578:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8578:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8563:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8563:3:6"
																				},
																				"nativeSrc": "8563:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8563:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8587:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8534:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "8534:28:6"
																		},
																		"nativeSrc": "8534:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8534:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8524:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8524:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8267:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8311:9:6",
														"nodeType": "YulTypedName",
														"src": "8311:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8322:7:6",
														"nodeType": "YulTypedName",
														"src": "8322:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8334:6:6",
														"nodeType": "YulTypedName",
														"src": "8334:6:6",
														"type": ""
													}
												],
												"src": "8267:345:6"
											},
											{
												"body": {
													"nativeSrc": "8681:80:6",
													"nodeType": "YulBlock",
													"src": "8681:80:6",
													"statements": [
														{
															"nativeSrc": "8691:22:6",
															"nodeType": "YulAssignment",
															"src": "8691:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8706:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8700:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8700:5:6"
																},
																"nativeSrc": "8700:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8700:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8691:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8691:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8749:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8749:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "8722:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "8722:26:6"
																},
																"nativeSrc": "8722:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8722:33:6"
															},
															"nativeSrc": "8722:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "8722:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "8618:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8659:6:6",
														"nodeType": "YulTypedName",
														"src": "8659:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8667:3:6",
														"nodeType": "YulTypedName",
														"src": "8667:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8675:5:6",
														"nodeType": "YulTypedName",
														"src": "8675:5:6",
														"type": ""
													}
												],
												"src": "8618:143:6"
											},
											{
												"body": {
													"nativeSrc": "8844:274:6",
													"nodeType": "YulBlock",
													"src": "8844:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8890:83:6",
																"nodeType": "YulBlock",
																"src": "8890:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8892:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8892:77:6"
																			},
																			"nativeSrc": "8892:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8892:79:6"
																		},
																		"nativeSrc": "8892:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8892:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8865:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8865:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8874:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8874:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8861:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8861:3:6"
																		},
																		"nativeSrc": "8861:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8861:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8886:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8886:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8857:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8857:3:6"
																},
																"nativeSrc": "8857:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8857:32:6"
															},
															"nativeSrc": "8854:119:6",
															"nodeType": "YulIf",
															"src": "8854:119:6"
														},
														{
															"nativeSrc": "8983:128:6",
															"nodeType": "YulBlock",
															"src": "8983:128:6",
															"statements": [
																{
																	"nativeSrc": "8998:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8998:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9012:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9012:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9002:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9002:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9027:74:6",
																	"nodeType": "YulAssignment",
																	"src": "9027:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9073:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9073:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9084:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9084:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9069:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9069:3:6"
																				},
																				"nativeSrc": "9069:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9069:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9093:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9093:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "9037:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "9037:31:6"
																		},
																		"nativeSrc": "9037:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9037:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9027:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9027:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8767:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8814:9:6",
														"nodeType": "YulTypedName",
														"src": "8814:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8825:7:6",
														"nodeType": "YulTypedName",
														"src": "8825:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8837:6:6",
														"nodeType": "YulTypedName",
														"src": "8837:6:6",
														"type": ""
													}
												],
												"src": "8767:351:6"
											},
											{
												"body": {
													"nativeSrc": "9220:73:6",
													"nodeType": "YulBlock",
													"src": "9220:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9237:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9237:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9242:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9242:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9230:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9230:6:6"
																},
																"nativeSrc": "9230:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9230:19:6"
															},
															"nativeSrc": "9230:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "9230:19:6"
														},
														{
															"nativeSrc": "9258:29:6",
															"nodeType": "YulAssignment",
															"src": "9258:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9277:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9277:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9282:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9282:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9273:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9273:3:6"
																},
																"nativeSrc": "9273:14:6",
																"nodeType": "YulFunctionCall",
																"src": "9273:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9258:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9258:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9124:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9192:3:6",
														"nodeType": "YulTypedName",
														"src": "9192:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9197:6:6",
														"nodeType": "YulTypedName",
														"src": "9197:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9208:11:6",
														"nodeType": "YulTypedName",
														"src": "9208:11:6",
														"type": ""
													}
												],
												"src": "9124:169:6"
											},
											{
												"body": {
													"nativeSrc": "9405:66:6",
													"nodeType": "YulBlock",
													"src": "9405:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9427:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9427:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9435:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9435:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9423:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9423:3:6"
																		},
																		"nativeSrc": "9423:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9423:14:6"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e2074686973204e4654",
																		"kind": "string",
																		"nativeSrc": "9439:24:6",
																		"nodeType": "YulLiteral",
																		"src": "9439:24:6",
																		"type": "",
																		"value": "You don't own this NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9416:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9416:6:6"
																},
																"nativeSrc": "9416:48:6",
																"nodeType": "YulFunctionCall",
																"src": "9416:48:6"
															},
															"nativeSrc": "9416:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "9416:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4",
												"nativeSrc": "9299:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9397:6:6",
														"nodeType": "YulTypedName",
														"src": "9397:6:6",
														"type": ""
													}
												],
												"src": "9299:172:6"
											},
											{
												"body": {
													"nativeSrc": "9623:220:6",
													"nodeType": "YulBlock",
													"src": "9623:220:6",
													"statements": [
														{
															"nativeSrc": "9633:74:6",
															"nodeType": "YulAssignment",
															"src": "9633:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9699:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9699:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9704:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9704:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9640:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9640:58:6"
																},
																"nativeSrc": "9640:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9640:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9633:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9633:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9805:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9805:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4",
																	"nativeSrc": "9716:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9716:88:6"
																},
																"nativeSrc": "9716:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9716:93:6"
															},
															"nativeSrc": "9716:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9716:93:6"
														},
														{
															"nativeSrc": "9818:19:6",
															"nodeType": "YulAssignment",
															"src": "9818:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9829:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9829:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9834:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9834:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9825:3:6"
																},
																"nativeSrc": "9825:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9825:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9818:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9477:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9611:3:6",
														"nodeType": "YulTypedName",
														"src": "9611:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9619:3:6",
														"nodeType": "YulTypedName",
														"src": "9619:3:6",
														"type": ""
													}
												],
												"src": "9477:366:6"
											},
											{
												"body": {
													"nativeSrc": "10020:248:6",
													"nodeType": "YulBlock",
													"src": "10020:248:6",
													"statements": [
														{
															"nativeSrc": "10030:26:6",
															"nodeType": "YulAssignment",
															"src": "10030:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10042:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10042:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10053:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10053:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10038:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:6"
																},
																"nativeSrc": "10038:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10038:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10030:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10030:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10088:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10088:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10073:3:6"
																		},
																		"nativeSrc": "10073:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10073:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10096:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10096:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10102:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10102:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10092:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10092:3:6"
																		},
																		"nativeSrc": "10092:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10092:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10066:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:6"
																},
																"nativeSrc": "10066:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10066:47:6"
															},
															"nativeSrc": "10066:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10066:47:6"
														},
														{
															"nativeSrc": "10122:139:6",
															"nodeType": "YulAssignment",
															"src": "10122:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10256:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10256:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10130:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10130:124:6"
																},
																"nativeSrc": "10130:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10130:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10122:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10122:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9849:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10000:9:6",
														"nodeType": "YulTypedName",
														"src": "10000:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10015:4:6",
														"nodeType": "YulTypedName",
														"src": "10015:4:6",
														"type": ""
													}
												],
												"src": "9849:419:6"
											},
											{
												"body": {
													"nativeSrc": "10380:67:6",
													"nodeType": "YulBlock",
													"src": "10380:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10402:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10402:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10410:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10410:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10398:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10398:3:6"
																		},
																		"nativeSrc": "10398:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10398:14:6"
																	},
																	{
																		"hexValue": "4e667420686173206e6f74206265656e207374616b6564",
																		"kind": "string",
																		"nativeSrc": "10414:25:6",
																		"nodeType": "YulLiteral",
																		"src": "10414:25:6",
																		"type": "",
																		"value": "Nft has not been staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10391:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10391:6:6"
																},
																"nativeSrc": "10391:49:6",
																"nodeType": "YulFunctionCall",
																"src": "10391:49:6"
															},
															"nativeSrc": "10391:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "10391:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b",
												"nativeSrc": "10274:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10372:6:6",
														"nodeType": "YulTypedName",
														"src": "10372:6:6",
														"type": ""
													}
												],
												"src": "10274:173:6"
											},
											{
												"body": {
													"nativeSrc": "10599:220:6",
													"nodeType": "YulBlock",
													"src": "10599:220:6",
													"statements": [
														{
															"nativeSrc": "10609:74:6",
															"nodeType": "YulAssignment",
															"src": "10609:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10675:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10675:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10680:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10616:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10616:58:6"
																},
																"nativeSrc": "10616:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10616:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10609:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10609:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10781:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10781:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b",
																	"nativeSrc": "10692:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10692:88:6"
																},
																"nativeSrc": "10692:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10692:93:6"
															},
															"nativeSrc": "10692:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10692:93:6"
														},
														{
															"nativeSrc": "10794:19:6",
															"nodeType": "YulAssignment",
															"src": "10794:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10805:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10805:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10810:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10801:3:6"
																},
																"nativeSrc": "10801:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10801:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10794:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10794:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10453:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10587:3:6",
														"nodeType": "YulTypedName",
														"src": "10587:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10595:3:6",
														"nodeType": "YulTypedName",
														"src": "10595:3:6",
														"type": ""
													}
												],
												"src": "10453:366:6"
											},
											{
												"body": {
													"nativeSrc": "10996:248:6",
													"nodeType": "YulBlock",
													"src": "10996:248:6",
													"statements": [
														{
															"nativeSrc": "11006:26:6",
															"nodeType": "YulAssignment",
															"src": "11006:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11018:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11018:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11029:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11029:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11014:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11014:3:6"
																},
																"nativeSrc": "11014:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11014:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11006:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11006:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11053:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11053:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11064:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11064:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11049:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11049:3:6"
																		},
																		"nativeSrc": "11049:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11049:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11072:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11072:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11078:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11078:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11068:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11068:3:6"
																		},
																		"nativeSrc": "11068:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11068:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11042:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11042:6:6"
																},
																"nativeSrc": "11042:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11042:47:6"
															},
															"nativeSrc": "11042:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11042:47:6"
														},
														{
															"nativeSrc": "11098:139:6",
															"nodeType": "YulAssignment",
															"src": "11098:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11232:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11232:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11106:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11106:124:6"
																},
																"nativeSrc": "11106:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11106:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11098:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11098:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10825:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10976:9:6",
														"nodeType": "YulTypedName",
														"src": "10976:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10991:4:6",
														"nodeType": "YulTypedName",
														"src": "10991:4:6",
														"type": ""
													}
												],
												"src": "10825:419:6"
											},
											{
												"body": {
													"nativeSrc": "11278:152:6",
													"nodeType": "YulBlock",
													"src": "11278:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11295:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11295:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11298:77:6",
																		"nodeType": "YulLiteral",
																		"src": "11298:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11288:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11288:6:6"
																},
																"nativeSrc": "11288:88:6",
																"nodeType": "YulFunctionCall",
																"src": "11288:88:6"
															},
															"nativeSrc": "11288:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "11288:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11392:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11392:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11395:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11395:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11385:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11385:6:6"
																},
																"nativeSrc": "11385:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11385:15:6"
															},
															"nativeSrc": "11385:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11385:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11416:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11416:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11419:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11419:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11409:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11409:6:6"
																},
																"nativeSrc": "11409:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11409:15:6"
															},
															"nativeSrc": "11409:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11409:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11250:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "11250:180:6"
											},
											{
												"body": {
													"nativeSrc": "11481:149:6",
													"nodeType": "YulBlock",
													"src": "11481:149:6",
													"statements": [
														{
															"nativeSrc": "11491:25:6",
															"nodeType": "YulAssignment",
															"src": "11491:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11514:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11514:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11496:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11496:17:6"
																},
																"nativeSrc": "11496:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11496:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11491:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11491:1:6"
																}
															]
														},
														{
															"nativeSrc": "11525:25:6",
															"nodeType": "YulAssignment",
															"src": "11525:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11548:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11548:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11530:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11530:17:6"
																},
																"nativeSrc": "11530:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11530:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11525:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11525:1:6"
																}
															]
														},
														{
															"nativeSrc": "11559:17:6",
															"nodeType": "YulAssignment",
															"src": "11559:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11571:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11571:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11574:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11574:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11567:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11567:3:6"
																},
																"nativeSrc": "11567:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11567:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11559:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11559:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11601:22:6",
																"nodeType": "YulBlock",
																"src": "11601:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11603:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11603:16:6"
																			},
																			"nativeSrc": "11603:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11603:18:6"
																		},
																		"nativeSrc": "11603:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11603:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11592:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11592:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11598:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11598:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11589:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11589:2:6"
																},
																"nativeSrc": "11589:11:6",
																"nodeType": "YulFunctionCall",
																"src": "11589:11:6"
															},
															"nativeSrc": "11586:37:6",
															"nodeType": "YulIf",
															"src": "11586:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11436:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11467:1:6",
														"nodeType": "YulTypedName",
														"src": "11467:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11470:1:6",
														"nodeType": "YulTypedName",
														"src": "11470:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11476:4:6",
														"nodeType": "YulTypedName",
														"src": "11476:4:6",
														"type": ""
													}
												],
												"src": "11436:194:6"
											},
											{
												"body": {
													"nativeSrc": "11684:362:6",
													"nodeType": "YulBlock",
													"src": "11684:362:6",
													"statements": [
														{
															"nativeSrc": "11694:25:6",
															"nodeType": "YulAssignment",
															"src": "11694:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11717:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11717:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11699:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11699:17:6"
																},
																"nativeSrc": "11699:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11699:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11694:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11694:1:6"
																}
															]
														},
														{
															"nativeSrc": "11728:25:6",
															"nodeType": "YulAssignment",
															"src": "11728:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11751:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11751:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11733:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11733:17:6"
																},
																"nativeSrc": "11733:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11733:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11728:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11728:1:6"
																}
															]
														},
														{
															"nativeSrc": "11762:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11762:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11785:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11785:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11788:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11788:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11781:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11781:3:6"
																},
																"nativeSrc": "11781:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11781:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11766:11:6",
																	"nodeType": "YulTypedName",
																	"src": "11766:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11799:41:6",
															"nodeType": "YulAssignment",
															"src": "11799:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11828:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "11828:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11810:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11810:17:6"
																},
																"nativeSrc": "11810:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11810:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11799:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11799:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12017:22:6",
																"nodeType": "YulBlock",
																"src": "12017:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12019:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12019:16:6"
																			},
																			"nativeSrc": "12019:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12019:18:6"
																		},
																		"nativeSrc": "12019:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12019:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11950:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "11950:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11943:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "11943:6:6"
																				},
																				"nativeSrc": "11943:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11943:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11973:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "11973:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11980:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "11980:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11989:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "11989:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11976:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "11976:3:6"
																						},
																						"nativeSrc": "11976:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "11976:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11970:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11970:2:6"
																				},
																				"nativeSrc": "11970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11970:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11923:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "11923:2:6"
																		},
																		"nativeSrc": "11923:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11923:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11903:6:6"
																},
																"nativeSrc": "11903:113:6",
																"nodeType": "YulFunctionCall",
																"src": "11903:113:6"
															},
															"nativeSrc": "11900:139:6",
															"nodeType": "YulIf",
															"src": "11900:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11636:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11667:1:6",
														"nodeType": "YulTypedName",
														"src": "11667:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11670:1:6",
														"nodeType": "YulTypedName",
														"src": "11670:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11676:7:6",
														"nodeType": "YulTypedName",
														"src": "11676:7:6",
														"type": ""
													}
												],
												"src": "11636:410:6"
											},
											{
												"body": {
													"nativeSrc": "12080:152:6",
													"nodeType": "YulBlock",
													"src": "12080:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12097:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12097:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12100:77:6",
																		"nodeType": "YulLiteral",
																		"src": "12100:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12090:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12090:6:6"
																},
																"nativeSrc": "12090:88:6",
																"nodeType": "YulFunctionCall",
																"src": "12090:88:6"
															},
															"nativeSrc": "12090:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "12090:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12194:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12197:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12197:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12187:6:6"
																},
																"nativeSrc": "12187:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12187:15:6"
															},
															"nativeSrc": "12187:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12187:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12218:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12218:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12221:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12221:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12211:6:6"
																},
																"nativeSrc": "12211:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12211:15:6"
															},
															"nativeSrc": "12211:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12211:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12052:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "12052:180:6"
											},
											{
												"body": {
													"nativeSrc": "12280:143:6",
													"nodeType": "YulBlock",
													"src": "12280:143:6",
													"statements": [
														{
															"nativeSrc": "12290:25:6",
															"nodeType": "YulAssignment",
															"src": "12290:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12313:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12313:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12295:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12295:17:6"
																},
																"nativeSrc": "12295:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12295:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12290:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12290:1:6"
																}
															]
														},
														{
															"nativeSrc": "12324:25:6",
															"nodeType": "YulAssignment",
															"src": "12324:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12347:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12347:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12329:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12329:17:6"
																},
																"nativeSrc": "12329:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12329:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12324:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12324:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12371:22:6",
																"nodeType": "YulBlock",
																"src": "12371:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12373:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12373:16:6"
																			},
																			"nativeSrc": "12373:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12373:18:6"
																		},
																		"nativeSrc": "12373:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12373:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12368:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12368:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12361:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12361:6:6"
																},
																"nativeSrc": "12361:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12361:9:6"
															},
															"nativeSrc": "12358:35:6",
															"nodeType": "YulIf",
															"src": "12358:35:6"
														},
														{
															"nativeSrc": "12403:14:6",
															"nodeType": "YulAssignment",
															"src": "12403:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12412:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12412:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12415:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12415:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12408:3:6"
																},
																"nativeSrc": "12408:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12408:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12403:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12403:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12238:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12269:1:6",
														"nodeType": "YulTypedName",
														"src": "12269:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12272:1:6",
														"nodeType": "YulTypedName",
														"src": "12272:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12278:1:6",
														"nodeType": "YulTypedName",
														"src": "12278:1:6",
														"type": ""
													}
												],
												"src": "12238:185:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't own this NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nft has not been staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"264": [
									{
										"length": 32,
										"start": 341
									},
									{
										"length": 32,
										"start": 693
									},
									{
										"length": 32,
										"start": 1011
									}
								],
								"267": [
									{
										"length": 32,
										"start": 479
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063150b7a021461004e5780632e17de781461007e578063584b62a11461009a578063a694fc3a146100ca575b5f80fd5b610068600480360381019061006391906107c1565b6100e6565b604051610075919061087b565b60405180910390f35b61009860048036038101906100939190610894565b6100f9565b005b6100b460048036038101906100af91906108bf565b61027d565b6040516100c1919061090c565b60405180910390f35b6100e460048036038101906100df9190610894565b61029c565b005b5f63150b7a0260e01b9050949350505050565b5f6101038261047e565b90505f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f90557f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033856040518463ffffffff1660e01b81526004016101b093929190610967565b5f604051808303815f87803b1580156101c7575f80fd5b505af11580156101d9573d5f803e3d5ffd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102389291906109af565b6020604051808303815f875af1158015610254573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102789190610a0b565b505050565b5f602052815f5260405f20602052805f5260405f205f91509150505481565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161030c919061090c565b602060405180830381865afa158015610327573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034b9190610a4a565b73ffffffffffffffffffffffffffffffffffffffff16146103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890610acf565b60405180910390fd5b425f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330846040518463ffffffff1660e01b815260040161044e93929190610967565b5f604051808303815f87803b158015610465575f80fd5b505af1158015610477573d5f803e3d5ffd5b5050505050565b5f805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20541161050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390610b37565b60405180910390fd5b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f2054426105649190610b82565b90505f603c670de0b6b3a76400008361057c856105a6565b6105869190610bb5565b6105909190610bb5565b61059a9190610c23565b90508092505050919050565b5f603c8210156105b8575f90506105e2565b60b48210156105ca57600390506105e2565b61012c8210156105dd57600590506105e2565b600a90505b919050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610621826105f8565b9050919050565b61063181610617565b811461063b575f80fd5b50565b5f8135905061064c81610628565b92915050565b5f819050919050565b61066481610652565b811461066e575f80fd5b50565b5f8135905061067f8161065b565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106d38261068d565b810181811067ffffffffffffffff821117156106f2576106f161069d565b5b80604052505050565b5f6107046105e7565b905061071082826106ca565b919050565b5f67ffffffffffffffff82111561072f5761072e61069d565b5b6107388261068d565b9050602081019050919050565b828183375f83830152505050565b5f61076561076084610715565b6106fb565b90508281526020810184848401111561078157610780610689565b5b61078c848285610745565b509392505050565b5f82601f8301126107a8576107a7610685565b5b81356107b8848260208601610753565b91505092915050565b5f805f80608085870312156107d9576107d86105f0565b5b5f6107e68782880161063e565b94505060206107f78782880161063e565b935050604061080887828801610671565b925050606085013567ffffffffffffffff811115610829576108286105f4565b5b61083587828801610794565b91505092959194509250565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61087581610841565b82525050565b5f60208201905061088e5f83018461086c565b92915050565b5f602082840312156108a9576108a86105f0565b5b5f6108b684828501610671565b91505092915050565b5f80604083850312156108d5576108d46105f0565b5b5f6108e28582860161063e565b92505060206108f385828601610671565b9150509250929050565b61090681610652565b82525050565b5f60208201905061091f5f8301846108fd565b92915050565b61092e81610617565b82525050565b5f82825260208201905092915050565b50565b5f6109525f83610934565b915061095d82610944565b5f82019050919050565b5f60808201905061097a5f830186610925565b6109876020830185610925565b61099460408301846108fd565b81810360608301526109a581610947565b9050949350505050565b5f6040820190506109c25f830185610925565b6109cf60208301846108fd565b9392505050565b5f8115159050919050565b6109ea816109d6565b81146109f4575f80fd5b50565b5f81519050610a05816109e1565b92915050565b5f60208284031215610a2057610a1f6105f0565b5b5f610a2d848285016109f7565b91505092915050565b5f81519050610a4481610628565b92915050565b5f60208284031215610a5f57610a5e6105f0565b5b5f610a6c84828501610a36565b91505092915050565b5f82825260208201905092915050565b7f596f7520646f6e2774206f776e2074686973204e4654000000000000000000005f82015250565b5f610ab9601683610a75565b9150610ac482610a85565b602082019050919050565b5f6020820190508181035f830152610ae681610aad565b9050919050565b7f4e667420686173206e6f74206265656e207374616b65640000000000000000005f82015250565b5f610b21601783610a75565b9150610b2c82610aed565b602082019050919050565b5f6020820190508181035f830152610b4e81610b15565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b8c82610652565b9150610b9783610652565b9250828203905081811115610baf57610bae610b55565b5b92915050565b5f610bbf82610652565b9150610bca83610652565b9250828202610bd881610652565b91508282048414831517610bef57610bee610b55565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c2d82610652565b9150610c3883610652565b925082610c4857610c47610bf6565b5b82820490509291505056fea2646970667358221220c18141fa4914bf0459fa4aac3ff57a75d2222489519cd7f61eb87e8ebbc9307564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xCA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x103 DUP3 PUSH2 0x47E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP3 SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x254 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x503 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x564 SWAP2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3C PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x57C DUP6 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x590 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x59A SWAP2 SWAP1 PUSH2 0xC23 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3C DUP3 LT ISZERO PUSH2 0x5B8 JUMPI PUSH0 SWAP1 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xB4 DUP3 LT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x12C DUP3 LT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x621 DUP3 PUSH2 0x5F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x631 DUP2 PUSH2 0x617 JUMP JUMPDEST DUP2 EQ PUSH2 0x63B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64C DUP2 PUSH2 0x628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x652 JUMP JUMPDEST DUP2 EQ PUSH2 0x66E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x67F DUP2 PUSH2 0x65B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x6D3 DUP3 PUSH2 0x68D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F1 PUSH2 0x69D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x704 PUSH2 0x5E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x710 DUP3 DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x72F JUMPI PUSH2 0x72E PUSH2 0x69D JUMP JUMPDEST JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x765 PUSH2 0x760 DUP5 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x781 JUMPI PUSH2 0x780 PUSH2 0x689 JUMP JUMPDEST JUMPDEST PUSH2 0x78C DUP5 DUP3 DUP6 PUSH2 0x745 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7A8 JUMPI PUSH2 0x7A7 PUSH2 0x685 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7B8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E6 DUP8 DUP3 DUP9 ADD PUSH2 0x63E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x7F7 DUP8 DUP3 DUP9 ADD PUSH2 0x63E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x808 DUP8 DUP3 DUP9 ADD PUSH2 0x671 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x829 JUMPI PUSH2 0x828 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST PUSH2 0x835 DUP8 DUP3 DUP9 ADD PUSH2 0x794 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88E PUSH0 DUP4 ADD DUP5 PUSH2 0x86C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B6 DUP5 DUP3 DUP6 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D5 JUMPI PUSH2 0x8D4 PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8E2 DUP6 DUP3 DUP7 ADD PUSH2 0x63E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8F3 DUP6 DUP3 DUP7 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x906 DUP2 PUSH2 0x652 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91F PUSH0 DUP4 ADD DUP5 PUSH2 0x8FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92E DUP2 PUSH2 0x617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x952 PUSH0 DUP4 PUSH2 0x934 JUMP JUMPDEST SWAP2 POP PUSH2 0x95D DUP3 PUSH2 0x944 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x97A PUSH0 DUP4 ADD DUP7 PUSH2 0x925 JUMP JUMPDEST PUSH2 0x987 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x925 JUMP JUMPDEST PUSH2 0x994 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x9A5 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9C2 PUSH0 DUP4 ADD DUP6 PUSH2 0x925 JUMP JUMPDEST PUSH2 0x9CF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EA DUP2 PUSH2 0x9D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0x9E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA1F PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA2D DUP5 DUP3 DUP6 ADD PUSH2 0x9F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA44 DUP2 PUSH2 0x628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5E PUSH2 0x5F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA6C DUP5 DUP3 DUP6 ADD PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206F776E2074686973204E465400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB9 PUSH1 0x16 DUP4 PUSH2 0xA75 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC4 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE6 DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E667420686173206E6F74206265656E207374616B6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB21 PUSH1 0x17 DUP4 PUSH2 0xA75 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2C DUP3 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4E DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB8C DUP3 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0xB97 DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBAF JUMPI PUSH2 0xBAE PUSH2 0xB55 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBF DUP3 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCA DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBD8 DUP2 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xB55 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC2D DUP3 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0xC38 DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC48 JUMPI PUSH2 0xC47 PUSH2 0xBF6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP2 COINBASE STATICCALL BLOBHASH EQ 0xBF DIV MSIZE STATICCALL BLOBBASEFEE 0xAC EXTCODEHASH CREATE2 PUSH27 0x75D2222489519CD7F61EB87E8EBBC9307564736F6C634300081900 CALLER ",
							"sourceMap": "313:1510:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:153:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;898:290:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;427:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;612:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;639:153:3;730:6;755:30;;;748:37;;639:153;;;;;;:::o;898:290:5:-;977:14;994:25;1010:8;994:15;:25::i;:::-;977:42;;1036:6;:18;1043:10;1036:18;;;;;;;;;;;;;;;:28;1055:8;1036:28;;;;;;;;;;;1029:35;;;1075:3;:20;;;1104:4;1111:10;1123:8;1075:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:5;:14;;;1162:10;1174:6;1147:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;940:248;898:290;:::o;427:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;612:280::-;695:10;670:35;;:3;:11;;;682:8;670:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;662:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;798:15;767:6;:18;774:10;767:18;;;;;;;;;;;;;;;:28;786:8;767:28;;;;;;;;;;;:46;;;;824:3;:20;;;845:10;865:4;872:8;824:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;612:280;:::o;1194:326::-;1259:7;1316:1;1285:6;:18;1292:10;1285:18;;;;;;;;;;;;;;;:28;1304:8;1285:28;;;;;;;;;;;;:32;1277:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1355:12;1388:6;:18;1395:10;1388:18;;;;;;;;;;;;;;;:28;1407:8;1388:28;;;;;;;;;;;;1370:15;:46;;;;:::i;:::-;1355:61;;1426:14;1481:9;1469:8;1461:4;1443:15;1453:4;1443:9;:15::i;:::-;:22;;;;:::i;:::-;:35;;;;:::i;:::-;:47;;;;:::i;:::-;1426:64;;1507:6;1500:13;;;;1194:326;;;:::o;1527:294::-;1582:7;1611:9;1604:4;:16;1601:214;;;1643:1;1636:8;;;;1601:214;1671:9;1664:4;:16;1661:154;;;1703:1;1696:8;;;;1661:154;1731:9;1724:4;:16;1721:94;;;1763:1;1756:8;;;;1721:94;1802:2;1795:9;;1527:294;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:148::-;2570:6;2565:3;2560;2547:30;2611:1;2602:6;2597:3;2593:16;2586:27;2472:148;;;:::o;2626:423::-;2703:5;2728:65;2744:48;2785:6;2744:48;:::i;:::-;2728:65;:::i;:::-;2719:74;;2816:6;2809:5;2802:21;2854:4;2847:5;2843:16;2892:3;2883:6;2878:3;2874:16;2871:25;2868:112;;;2899:79;;:::i;:::-;2868:112;2989:54;3036:6;3031:3;3026;2989:54;:::i;:::-;2709:340;2626:423;;;;;:::o;3068:338::-;3123:5;3172:3;3165:4;3157:6;3153:17;3149:27;3139:122;;3180:79;;:::i;:::-;3139:122;3297:6;3284:20;3322:78;3396:3;3388:6;3381:4;3373:6;3369:17;3322:78;:::i;:::-;3313:87;;3129:277;3068:338;;;;:::o;3412:943::-;3507:6;3515;3523;3531;3580:3;3568:9;3559:7;3555:23;3551:33;3548:120;;;3587:79;;:::i;:::-;3548:120;3707:1;3732:53;3777:7;3768:6;3757:9;3753:22;3732:53;:::i;:::-;3722:63;;3678:117;3834:2;3860:53;3905:7;3896:6;3885:9;3881:22;3860:53;:::i;:::-;3850:63;;3805:118;3962:2;3988:53;4033:7;4024:6;4013:9;4009:22;3988:53;:::i;:::-;3978:63;;3933:118;4118:2;4107:9;4103:18;4090:32;4149:18;4141:6;4138:30;4135:117;;;4171:79;;:::i;:::-;4135:117;4276:62;4330:7;4321:6;4310:9;4306:22;4276:62;:::i;:::-;4266:72;;4061:287;3412:943;;;;;;;:::o;4361:149::-;4397:7;4437:66;4430:5;4426:78;4415:89;;4361:149;;;:::o;4516:115::-;4601:23;4618:5;4601:23;:::i;:::-;4596:3;4589:36;4516:115;;:::o;4637:218::-;4728:4;4766:2;4755:9;4751:18;4743:26;;4779:69;4845:1;4834:9;4830:17;4821:6;4779:69;:::i;:::-;4637:218;;;;:::o;4861:329::-;4920:6;4969:2;4957:9;4948:7;4944:23;4940:32;4937:119;;;4975:79;;:::i;:::-;4937:119;5095:1;5120:53;5165:7;5156:6;5145:9;5141:22;5120:53;:::i;:::-;5110:63;;5066:117;4861:329;;;;:::o;5196:474::-;5264:6;5272;5321:2;5309:9;5300:7;5296:23;5292:32;5289:119;;;5327:79;;:::i;:::-;5289:119;5447:1;5472:53;5517:7;5508:6;5497:9;5493:22;5472:53;:::i;:::-;5462:63;;5418:117;5574:2;5600:53;5645:7;5636:6;5625:9;5621:22;5600:53;:::i;:::-;5590:63;;5545:118;5196:474;;;;;:::o;5676:118::-;5763:24;5781:5;5763:24;:::i;:::-;5758:3;5751:37;5676:118;;:::o;5800:222::-;5893:4;5931:2;5920:9;5916:18;5908:26;;5944:71;6012:1;6001:9;5997:17;5988:6;5944:71;:::i;:::-;5800:222;;;;:::o;6028:118::-;6115:24;6133:5;6115:24;:::i;:::-;6110:3;6103:37;6028:118;;:::o;6152:168::-;6235:11;6269:6;6264:3;6257:19;6309:4;6304:3;6300:14;6285:29;;6152:168;;;;:::o;6326:114::-;;:::o;6446:362::-;6587:3;6608:65;6671:1;6666:3;6608:65;:::i;:::-;6601:72;;6682:93;6771:3;6682:93;:::i;:::-;6800:1;6795:3;6791:11;6784:18;;6446:362;;;:::o;6814:748::-;7063:4;7101:3;7090:9;7086:19;7078:27;;7115:71;7183:1;7172:9;7168:17;7159:6;7115:71;:::i;:::-;7196:72;7264:2;7253:9;7249:18;7240:6;7196:72;:::i;:::-;7278;7346:2;7335:9;7331:18;7322:6;7278:72;:::i;:::-;7397:9;7391:4;7387:20;7382:2;7371:9;7367:18;7360:48;7425:130;7550:4;7425:130;:::i;:::-;7417:138;;6814:748;;;;;;:::o;7568:332::-;7689:4;7727:2;7716:9;7712:18;7704:26;;7740:71;7808:1;7797:9;7793:17;7784:6;7740:71;:::i;:::-;7821:72;7889:2;7878:9;7874:18;7865:6;7821:72;:::i;:::-;7568:332;;;;;:::o;7906:90::-;7940:7;7983:5;7976:13;7969:21;7958:32;;7906:90;;;:::o;8002:116::-;8072:21;8087:5;8072:21;:::i;:::-;8065:5;8062:32;8052:60;;8108:1;8105;8098:12;8052:60;8002:116;:::o;8124:137::-;8178:5;8209:6;8203:13;8194:22;;8225:30;8249:5;8225:30;:::i;:::-;8124:137;;;;:::o;8267:345::-;8334:6;8383:2;8371:9;8362:7;8358:23;8354:32;8351:119;;;8389:79;;:::i;:::-;8351:119;8509:1;8534:61;8587:7;8578:6;8567:9;8563:22;8534:61;:::i;:::-;8524:71;;8480:125;8267:345;;;;:::o;8618:143::-;8675:5;8706:6;8700:13;8691:22;;8722:33;8749:5;8722:33;:::i;:::-;8618:143;;;;:::o;8767:351::-;8837:6;8886:2;8874:9;8865:7;8861:23;8857:32;8854:119;;;8892:79;;:::i;:::-;8854:119;9012:1;9037:64;9093:7;9084:6;9073:9;9069:22;9037:64;:::i;:::-;9027:74;;8983:128;8767:351;;;;:::o;9124:169::-;9208:11;9242:6;9237:3;9230:19;9282:4;9277:3;9273:14;9258:29;;9124:169;;;;:::o;9299:172::-;9439:24;9435:1;9427:6;9423:14;9416:48;9299:172;:::o;9477:366::-;9619:3;9640:67;9704:2;9699:3;9640:67;:::i;:::-;9633:74;;9716:93;9805:3;9716:93;:::i;:::-;9834:2;9829:3;9825:12;9818:19;;9477:366;;;:::o;9849:419::-;10015:4;10053:2;10042:9;10038:18;10030:26;;10102:9;10096:4;10092:20;10088:1;10077:9;10073:17;10066:47;10130:131;10256:4;10130:131;:::i;:::-;10122:139;;9849:419;;;:::o;10274:173::-;10414:25;10410:1;10402:6;10398:14;10391:49;10274:173;:::o;10453:366::-;10595:3;10616:67;10680:2;10675:3;10616:67;:::i;:::-;10609:74;;10692:93;10781:3;10692:93;:::i;:::-;10810:2;10805:3;10801:12;10794:19;;10453:366;;;:::o;10825:419::-;10991:4;11029:2;11018:9;11014:18;11006:26;;11078:9;11072:4;11068:20;11064:1;11053:9;11049:17;11042:47;11106:131;11232:4;11106:131;:::i;:::-;11098:139;;10825:419;;;:::o;11250:180::-;11298:77;11295:1;11288:88;11395:4;11392:1;11385:15;11419:4;11416:1;11409:15;11436:194;11476:4;11496:20;11514:1;11496:20;:::i;:::-;11491:25;;11530:20;11548:1;11530:20;:::i;:::-;11525:25;;11574:1;11571;11567:9;11559:17;;11598:1;11592:4;11589:11;11586:37;;;11603:18;;:::i;:::-;11586:37;11436:194;;;;:::o;11636:410::-;11676:7;11699:20;11717:1;11699:20;:::i;:::-;11694:25;;11733:20;11751:1;11733:20;:::i;:::-;11728:25;;11788:1;11785;11781:9;11810:30;11828:11;11810:30;:::i;:::-;11799:41;;11989:1;11980:7;11976:15;11973:1;11970:22;11950:1;11943:9;11923:83;11900:139;;12019:18;;:::i;:::-;11900:139;11684:362;11636:410;;;;:::o;12052:180::-;12100:77;12097:1;12090:88;12197:4;12194:1;12187:15;12221:4;12218:1;12211:15;12238:185;12278:1;12295:20;12313:1;12295:20;:::i;:::-;12290:25;;12329:20;12347:1;12329:20;:::i;:::-;12324:25;;12368:1;12358:35;;12373:18;;:::i;:::-;12358:35;12415:1;12412;12408:9;12403:14;;12238:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "641800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"stake(uint256)": "infinite",
								"stakes(address,uint256)": "infinite",
								"unstake(uint256)": "infinite"
							},
							"internal": {
								"calculate(uint256)": "116",
								"calculateReward(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 496,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 562,
									"end": 566,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 548,
									"end": 567,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 548,
									"end": 567,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 548,
									"end": 567,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 548,
									"end": 567,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 548,
									"end": 567,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 548,
									"end": 567,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 548,
									"end": 567,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 548,
									"end": 567,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 548,
									"end": 567,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 548,
									"end": 567,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 592,
									"end": 598,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 577,
									"end": 599,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 577,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 577,
									"end": 599,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 577,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 577,
									"end": 599,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 577,
									"end": 599,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 577,
									"end": 599,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 577,
									"end": 599,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 577,
									"end": 599,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 496,
									"end": 606,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "267"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "264"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 1823,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c18141fa4914bf0459fa4aac3ff57a75d2222489519cd7f61eb87e8ebbc9307564736f6c63430008190033",
									".code": [
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "2E17DE78"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "584B62A1"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 1823,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 639,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 639,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 639,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 639,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 898,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 898,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 427,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 427,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 612,
											"end": 892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 612,
											"end": 892,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 612,
											"end": 892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 612,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 612,
											"end": 892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 612,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 612,
											"end": 892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 639,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 639,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 785,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 755,
											"end": 785,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 755,
											"end": 785,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 977,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1010,
											"end": 1018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 994,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 994,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1063,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "PUSH",
											"source": 5,
											"value": "B88D4FDE"
										},
										{
											"begin": 1104,
											"end": 1108,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1131,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1075,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1152,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1147,
											"end": 1161,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1161,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1147,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 1188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 427,
											"end": 489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 612,
											"end": 892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 695,
											"end": 705,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 670,
											"end": 705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 670,
											"end": 673,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 670,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 670,
											"end": 681,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 670,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 682,
											"end": 690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 670,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 670,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 691,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 670,
											"end": 691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 670,
											"end": 705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 662,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 662,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 798,
											"end": 813,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 774,
											"end": 784,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 794,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 795,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 795,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 767,
											"end": 795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 795,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 767,
											"end": 813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 767,
											"end": 813,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 767,
											"end": 813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 824,
											"end": 827,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 5,
											"value": "B88D4FDE"
										},
										{
											"begin": 845,
											"end": 855,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 865,
											"end": 869,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 872,
											"end": 880,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 824,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 824,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 824,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1520,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1194,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1302,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1312,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1317,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1277,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1277,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1405,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1385,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1370,
											"end": 1416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1370,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1416,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1370,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1440,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "3C"
										},
										{
											"begin": 1469,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1461,
											"end": 1465,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1453,
											"end": 1457,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1443,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1443,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1443,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1443,
											"end": 1478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1443,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1443,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1443,
											"end": 1490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1443,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1490,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1443,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1821,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1527,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "3C"
										},
										{
											"begin": 1604,
											"end": 1608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1601,
											"end": 1815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1601,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "PUSH",
											"source": 5,
											"value": "B4"
										},
										{
											"begin": 1664,
											"end": 1668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1680,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1661,
											"end": 1815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1704,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1696,
											"end": 1704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1704,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1661,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "PUSH",
											"source": 5,
											"value": "12C"
										},
										{
											"begin": 1724,
											"end": 1728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1740,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1721,
											"end": 1815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1756,
											"end": 1764,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1721,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1821,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1527,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1821,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1539,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1820,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1957,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1933,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1958,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 2018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2085,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2114,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2370,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2620,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2472,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2563,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2577,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2626,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2744,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2744,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2792,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2744,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2728,
											"end": 2793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2793,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2728,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2847,
											"end": 2852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2895,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2896,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2868,
											"end": 2980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2899,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2899,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2978,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2899,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2980,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2868,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3036,
											"end": 3042,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3029,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2989,
											"end": 3043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3043,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2989,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 3049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 3049,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 3049,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 3049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 3049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 3049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3406,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3068,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3169,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3153,
											"end": 3170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3176,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3139,
											"end": 3261,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3180,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3180,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3259,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3180,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3261,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3139,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3304,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3396,
											"end": 3399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3385,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3322,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3400,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3322,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3406,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3568,
											"end": 3577,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3566,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3578,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3584,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3548,
											"end": 3668,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3587,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3587,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3666,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3587,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3668,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3548,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3732,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3732,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3785,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3860,
											"end": 3913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3913,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4033,
											"end": 4040,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4024,
											"end": 4030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4022,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3988,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4120,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4107,
											"end": 4116,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4122,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4168,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4135,
											"end": 4252,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4171,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4252,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4135,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4276,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4361,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4503,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4430,
											"end": 4435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4631,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4516,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4601,
											"end": 4624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4624,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4601,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4599,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4625,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4855,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4637,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4728,
											"end": 4732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4843,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4779,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4848,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4779,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4855,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5190,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4861,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4955,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4967,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4972,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 5056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4937,
											"end": 5056,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4975,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 5056,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4937,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5165,
											"end": 5172,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5141,
											"end": 5163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5120,
											"end": 5173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5173,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5120,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5190,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5190,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5670,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 5196,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5307,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5296,
											"end": 5319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5324,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5327,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5506,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5472,
											"end": 5525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5645,
											"end": 5652,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5634,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5600,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5545,
											"end": 5663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5670,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5670,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5794,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5676,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5781,
											"end": 5786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5763,
											"end": 5787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5787,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5763,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6022,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5800,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5908,
											"end": 5934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5908,
											"end": 5934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 5994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5944,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6015,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5944,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6022,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6028,
											"end": 6146,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6028,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6133,
											"end": 6138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6115,
											"end": 6139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6139,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6115,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6113,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6103,
											"end": 6140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6028,
											"end": 6146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6028,
											"end": 6146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6028,
											"end": 6146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6320,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6152,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6304,
											"end": 6307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6320,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6440,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6326,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6808,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6446,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6587,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6669,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6608,
											"end": 6673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6673,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6608,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6673,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6771,
											"end": 6774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6682,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6775,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6682,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7063,
											"end": 7067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7090,
											"end": 7099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7078,
											"end": 7105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7078,
											"end": 7105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7183,
											"end": 7184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7181,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7165,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 7115,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 7196,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 7278,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7391,
											"end": 7395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7387,
											"end": 7407,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7371,
											"end": 7380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7360,
											"end": 7408,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7550,
											"end": 7554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7425,
											"end": 7555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7555,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7425,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7417,
											"end": 7555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7417,
											"end": 7555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 7562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7900,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 7568,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 7693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7704,
											"end": 7730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7704,
											"end": 7730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 7740,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7889,
											"end": 7891,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7865,
											"end": 7871,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 7821,
											"end": 7893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7893,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7821,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7900,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7900,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7996,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 7906,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7940,
											"end": 7947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 7988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7969,
											"end": 7990,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8118,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8002,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8072,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8087,
											"end": 8092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8072,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 8072,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8072,
											"end": 8093,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8072,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8065,
											"end": 8070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8062,
											"end": 8094,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8052,
											"end": 8112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 8112,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8052,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8261,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8124,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8178,
											"end": 8183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8209,
											"end": 8215,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8203,
											"end": 8216,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8194,
											"end": 8216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8194,
											"end": 8216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 8249,
											"end": 8254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8225,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8255,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 8225,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8261,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8612,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8385,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8369,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8381,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8354,
											"end": 8386,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 8389,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8587,
											"end": 8594,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8578,
											"end": 8584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8567,
											"end": 8576,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8534,
											"end": 8595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8595,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8534,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8480,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8612,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8761,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8618,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8700,
											"end": 8713,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8691,
											"end": 8713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8691,
											"end": 8713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8749,
											"end": 8754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 8722,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8755,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8722,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 9118,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 8767,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8886,
											"end": 8888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8874,
											"end": 8883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8872,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8861,
											"end": 8884,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8857,
											"end": 8889,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8854,
											"end": 8973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8892,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8892,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 8892,
											"end": 8971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8892,
											"end": 8971,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8892,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8973,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8854,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9093,
											"end": 9100,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9073,
											"end": 9082,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9037,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9101,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9037,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 9118,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 9118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 9118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 9118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 9118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9293,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 9124,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9242,
											"end": 9248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9237,
											"end": 9240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9286,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9277,
											"end": 9280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9273,
											"end": 9287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9293,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9299,
											"end": 9471,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9299,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9463,
											"name": "PUSH",
											"source": 6,
											"value": "596F7520646F6E2774206F776E2074686973204E465400000000000000000000"
										},
										{
											"begin": 9435,
											"end": 9436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9437,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9299,
											"end": 9471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9299,
											"end": 9471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9704,
											"end": 9706,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 9699,
											"end": 9702,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 9640,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9633,
											"end": 9707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9633,
											"end": 9707,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9716,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9836,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9829,
											"end": 9832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10053,
											"end": 10055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10042,
											"end": 10051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10112,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10088,
											"end": 10089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10073,
											"end": 10090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10066,
											"end": 10113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10256,
											"end": 10260,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 10130,
											"end": 10261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 10268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10447,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 10274,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10439,
											"name": "PUSH",
											"source": 6,
											"value": "4E667420686173206E6F74206265656E207374616B6564000000000000000000"
										},
										{
											"begin": 10410,
											"end": 10411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10391,
											"end": 10440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10819,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10453,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10595,
											"end": 10598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10616,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 10680,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 10675,
											"end": 10678,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10616,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 10616,
											"end": 10683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10616,
											"end": 10683,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 10616,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10692,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10781,
											"end": 10784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10692,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 10692,
											"end": 10785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10692,
											"end": 10785,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10692,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10810,
											"end": 10812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10805,
											"end": 10808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10794,
											"end": 10813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10794,
											"end": 10813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10825,
											"end": 11244,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 10825,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 10995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11029,
											"end": 11031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11014,
											"end": 11032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11006,
											"end": 11032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11006,
											"end": 11032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11078,
											"end": 11087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11064,
											"end": 11065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11053,
											"end": 11062,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11049,
											"end": 11066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11042,
											"end": 11089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11232,
											"end": 11236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 11106,
											"end": 11237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11237,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11106,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10825,
											"end": 11244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10825,
											"end": 11244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10825,
											"end": 11244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10825,
											"end": 11244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11430,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 11250,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11298,
											"end": 11375,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11295,
											"end": 11296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11376,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11395,
											"end": 11399,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11392,
											"end": 11393,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11385,
											"end": 11400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11416,
											"end": 11417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11630,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 11436,
											"end": 11630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11476,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11514,
											"end": 11515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11496,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 11496,
											"end": 11516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11496,
											"end": 11516,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11496,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11530,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11548,
											"end": 11549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11530,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 11530,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11530,
											"end": 11550,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11530,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11525,
											"end": 11550,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11525,
											"end": 11550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11574,
											"end": 11575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11567,
											"end": 11576,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11559,
											"end": 11576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11559,
											"end": 11576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11599,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 11600,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11623,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11586,
											"end": 11623,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 11603,
											"end": 11621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11623,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11586,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11630,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 12046,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 11636,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11676,
											"end": 11683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11717,
											"end": 11718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11699,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 11699,
											"end": 11719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11699,
											"end": 11719,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11699,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11694,
											"end": 11719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11694,
											"end": 11719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 11751,
											"end": 11752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 11733,
											"end": 11753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11753,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 11733,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11753,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11781,
											"end": 11790,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11810,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 11828,
											"end": 11839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11810,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 11810,
											"end": 11840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11810,
											"end": 11840,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 11810,
											"end": 11840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11799,
											"end": 11840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11799,
											"end": 11840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11989,
											"end": 11990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11980,
											"end": 11987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11991,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11973,
											"end": 11974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11970,
											"end": 11992,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11950,
											"end": 11951,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11943,
											"end": 11952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11923,
											"end": 12006,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 11900,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 11900,
											"end": 12039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 12019,
											"end": 12037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11900,
											"end": 12039,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 11900,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11684,
											"end": 12046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 12046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 12046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 12046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 12046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 12046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12052,
											"end": 12232,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 12052,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12100,
											"end": 12177,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12097,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12090,
											"end": 12178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12197,
											"end": 12201,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12187,
											"end": 12202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12221,
											"end": 12225,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12218,
											"end": 12219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12226,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12423,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12238,
											"end": 12423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12278,
											"end": 12279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 12295,
											"end": 12315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12315,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 12295,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12290,
											"end": 12315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12290,
											"end": 12315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 12347,
											"end": 12348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 12329,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12324,
											"end": 12349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12324,
											"end": 12349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 12358,
											"end": 12393,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 12373,
											"end": 12391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12393,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 12358,
											"end": 12393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12417,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12423,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Web3Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"stake(uint256)": "a694fc3a",
							"stakes(address,uint256)": "584b62a1",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Web3Staking.sol\":\"Staking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/Web3Staking.sol\":{\"keccak256\":\"0x2db625fe32ae6b2d5592fe1dd628bccbfb9b20b50fe4e25a5cd8d3fd67702d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fff2618ec88d5e6fb2219cfd8bfba6d374a7b0c3e2393a91654b4359c287eca4\",\"dweb:/ipfs/QmeABFJnX7PBF4TnaMwvXW22v4jche1AvhFZYUFyDG5MW1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 273,
								"contract": "contracts/Web3Staking.sol:Staking",
								"label": "stakes",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							251
						],
						"IERC721": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 252,
							"src": "134:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 80,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 251,
										"src": "142:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "IERC165",
										"nameLocations": [
											"287:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 251,
										"src": "287:7:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								251
							],
							"name": "IERC721",
							"nameLocation": "276:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 93,
									"name": "Transfer",
									"nameLocation": "400:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "409:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "431:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "451:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:1"
									},
									"src": "394:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 102,
									"name": "Approval",
									"nameLocation": "587:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "596:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "619:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "645:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:1"
									},
									"src": "581:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 111,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "819:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "842:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "868:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:1"
									},
									"src": "798:85:1"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "989:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1027:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:1"
									},
									"scope": 194,
									"src": "970:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1203:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1243:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:1"
									},
									"scope": 194,
									"src": "1186:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1860:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1874:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1903:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:1"
									},
									"scope": 194,
									"src": "1834:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2701:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:1"
									},
									"scope": 194,
									"src": "2649:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3492:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3506:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:1"
									},
									"scope": 194,
									"src": "3470:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4024:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4036:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:1"
									},
									"scope": 194,
									"src": "4007:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4415:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4433:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:1"
									},
									"scope": 194,
									"src": "4388:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4628:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4668:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:1"
									},
									"scope": 194,
									"src": "4607:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4861:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4876:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4917:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:1"
									},
									"scope": 194,
									"src": "4835:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "266:4659:1",
							"usedErrors": [],
							"usedEvents": [
								93,
								102,
								111
							]
						}
					],
					"src": "108:4818:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "867:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "893:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "915:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "940:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "984:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:2"
									},
									"scope": 212,
									"src": "832:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 213,
							"src": "295:699:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							239
						],
						"IERC721Receiver": [
							212
						]
					},
					"id": 240,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 240,
							"sourceUnit": 213,
							"src": "145:55:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 215,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 212,
										"src": "153:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 218,
										"name": "IERC721Receiver",
										"nameLocations": [
											"475:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "475:15:3"
									},
									"id": 219,
									"nodeType": "InheritanceSpecifier",
									"src": "475:15:3"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 217,
								"nodeType": "StructuredDocumentation",
								"src": "202:238:3",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 239,
							"linearizedBaseContracts": [
								239,
								212
							],
							"name": "ERC721Holder",
							"nameLocation": "459:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										211
									],
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "738:54:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 233,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "755:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$239",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "760:16:3",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "755:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "777:8:3",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "755:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 232,
												"id": 236,
												"nodeType": "Return",
												"src": "748:37:3"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "497:137:3",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "648:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "665:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "674:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "683:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "692:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "692:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:41:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "730:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 230,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "730:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:8:3"
									},
									"scope": 239,
									"src": "639:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 240,
							"src": "441:353:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:676:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251
							],
							"name": "IERC165",
							"nameLocation": "431:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "817:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 244,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:4"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "860:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:4"
									},
									"scope": 251,
									"src": "790:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "421:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:4"
				},
				"id": 4
			},
			"contracts/Web3Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Web3Staking.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							239
						],
						"IERC165": [
							251
						],
						"IERC20": [
							77
						],
						"IERC721": [
							194
						],
						"IERC721Receiver": [
							212
						],
						"Staking": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 457,
							"sourceUnit": 195,
							"src": "59:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 457,
							"sourceUnit": 78,
							"src": "118:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 457,
							"sourceUnit": 213,
							"src": "175:66:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 457,
							"sourceUnit": 240,
							"src": "242:69:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 258,
										"name": "IERC721Receiver",
										"nameLocations": [
											"333:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "333:15:5"
									},
									"id": 259,
									"nodeType": "InheritanceSpecifier",
									"src": "333:15:5"
								},
								{
									"baseName": {
										"id": 260,
										"name": "ERC721Holder",
										"nameLocations": [
											"350:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 239,
										"src": "350:12:5"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "350:12:5"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 456,
							"linearizedBaseContracts": [
								456,
								239,
								212
							],
							"name": "Staking",
							"nameLocation": "322:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 264,
									"mutability": "immutable",
									"name": "nft",
									"nameLocation": "388:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "370:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$194",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 262,
											"name": "IERC721",
											"nameLocations": [
												"370:7:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 194,
											"src": "370:7:5"
										},
										"referencedDeclaration": 194,
										"src": "370:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$194",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 267,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "414:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "397:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 266,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 265,
											"name": "IERC20",
											"nameLocations": [
												"397:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "397:6:5"
										},
										"referencedDeclaration": 77,
										"src": "397:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "584b62a1",
									"id": 273,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "483:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "427:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 272,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 268,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "436:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "427:48:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 271,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 269,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "455:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "447:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "466:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "538:68:5",
										"statements": [
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "548:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$194",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 282,
																"name": "_nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "562:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 281,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "554:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$194_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "554:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$194",
															"typeString": "contract IERC721"
														}
													},
													"src": "548:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$194",
														"typeString": "contract IERC721"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "548:19:5"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 286,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "577:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 288,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "592:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 287,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "585:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "577:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "577:22:5"
											}
										]
									},
									"id": 293,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "516:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "508:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "530:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "522:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:30:5"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:0:5"
									},
									"scope": 456,
									"src": "496:110:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "652:240:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "682:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 299,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "670:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$194",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "674:7:5",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 127,
																	"src": "670:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "670:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 303,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "695:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "699:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "695:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "670:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e2074686973204e4654",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "707:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4",
																"typeString": "literal_string \"You don't own this NFT\""
															},
															"value": "You don't own this NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e9ad93f1edb541dd3b61e276752294106d56a26f2dd3e9791ac8a025cfa46a4",
																"typeString": "literal_string \"You don't own this NFT\""
															}
														],
														"id": 298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "662:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "662:70:5"
											},
											{
												"expression": {
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 309,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "767:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 313,
															"indexExpression": {
																"expression": {
																	"id": 310,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "774:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "778:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "774:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "767:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 314,
														"indexExpression": {
															"id": 312,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "786:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "767:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 315,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "798:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "804:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "798:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "767:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "767:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 322,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "845:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "849:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "845:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 326,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "865:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$456",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$456",
																		"typeString": "contract Staking"
																	}
																],
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "857:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 324,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "857:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "857:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "872:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "882:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 319,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "824:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$194",
																"typeString": "contract IERC721"
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "828:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 139,
														"src": "824:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "824:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "824:61:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "621:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "627:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:18:5"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "652:0:5"
									},
									"scope": 456,
									"src": "612:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "940:248:5",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "985:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "977:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "977:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [
														{
															"id": 341,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1010:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 340,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "994:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "994:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "977:42:5"
											},
											{
												"expression": {
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1029:35:5",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 344,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "1036:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 347,
															"indexExpression": {
																"expression": {
																	"id": 345,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1043:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1047:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1043:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1036:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 349,
														"indexExpression": {
															"id": 348,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1055:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1036:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "1029:35:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 357,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1104:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$456",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$456",
																		"typeString": "contract Staking"
																	}
																],
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1096:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 355,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1096:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1096:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1111:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1115:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1111:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1123:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1133:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 352,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1075:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$194",
																"typeString": "contract IERC721"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1079:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 139,
														"src": "1075:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1075:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1162:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1166:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1162:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "1174:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 365,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "1147:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1153:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1147:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1147:34:5"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "907:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "923:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "915:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:18:5"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:5"
									},
									"scope": 456,
									"src": "898:290:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "1267:253:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 382,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "1285:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 385,
																	"indexExpression": {
																		"expression": {
																			"id": 383,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1292:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1296:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1292:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1285:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 387,
																"indexExpression": {
																	"id": 386,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "1304:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1285:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1316:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1285:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e667420686173206e6f74206265656e207374616b6564",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1319:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b",
																"typeString": "literal_string \"Nft has not been staked\""
															},
															"value": "Nft has not been staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bf7c6dd2e6dee7eb91e8b12fc4a2ede5bc8b0dcad428bfb330f59ac12c4a54b",
																"typeString": "literal_string \"Nft has not been staked\""
															}
														],
														"id": 381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1277:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1277:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1277:68:5"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1363:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "1355:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1355:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 395,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1370:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1376:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1370:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 397,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "1388:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 400,
															"indexExpression": {
																"expression": {
																	"id": 398,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1395:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1399:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1395:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1388:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "1407:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1388:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1370:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1355:61:5"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1434:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "1426:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1426:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "1453:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 407,
																	"name": "calculate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "1443:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1443:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 410,
																"name": "time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "1461:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1443:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1469:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1475:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1469:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 415,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1468:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1443:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1481:9:5",
														"subdenomination": "minutes",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "1"
													},
													"src": "1443:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1426:64:5"
											},
											{
												"expression": {
													"id": 420,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 406,
													"src": "1507:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 380,
												"id": 421,
												"nodeType": "Return",
												"src": "1500:13:5"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "1203:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1227:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1219:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:18:5"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1259:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:9:5"
									},
									"scope": 456,
									"src": "1194:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "1591:230:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1604:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1611:9:5",
														"subdenomination": "minutes",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "1"
													},
													"src": "1604:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 436,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "1664:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "33",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1671:9:5",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "3"
														},
														"src": "1664:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1724:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "35",
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1731:9:5",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "5"
															},
															"src": "1724:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 450,
															"nodeType": "Block",
															"src": "1781:34:5",
															"statements": [
																{
																	"expression": {
																		"hexValue": "3130",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1802:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"functionReturnParameters": 429,
																	"id": 449,
																	"nodeType": "Return",
																	"src": "1795:9:5"
																}
															]
														},
														"id": 451,
														"nodeType": "IfStatement",
														"src": "1721:94:5",
														"trueBody": {
															"id": 447,
															"nodeType": "Block",
															"src": "1742:33:5",
															"statements": [
																{
																	"expression": {
																		"hexValue": "35",
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1763:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"functionReturnParameters": 429,
																	"id": 446,
																	"nodeType": "Return",
																	"src": "1756:8:5"
																}
															]
														}
													},
													"id": 452,
													"nodeType": "IfStatement",
													"src": "1661:154:5",
													"trueBody": {
														"id": 441,
														"nodeType": "Block",
														"src": "1682:33:5",
														"statements": [
															{
																"expression": {
																	"hexValue": "33",
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1703:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"functionReturnParameters": 429,
																"id": 440,
																"nodeType": "Return",
																"src": "1696:8:5"
															}
														]
													}
												},
												"id": 453,
												"nodeType": "IfStatement",
												"src": "1601:214:5",
												"trueBody": {
													"id": 435,
													"nodeType": "Block",
													"src": "1622:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1643:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 429,
															"id": 434,
															"nodeType": "Return",
															"src": "1636:8:5"
														}
													]
												}
											}
										]
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculate",
									"nameLocation": "1536:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1554:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1546:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:14:5"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1582:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:9:5"
									},
									"scope": 456,
									"src": "1527:294:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 457,
							"src": "313:1510:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1790:5"
				},
				"id": 5
			}
		}
	}
}