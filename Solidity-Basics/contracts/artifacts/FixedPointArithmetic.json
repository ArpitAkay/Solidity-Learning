{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212202c79bc19a4035dada6a693060122bcebc97caf6ff9a8b02334ffcdcb6676a44064736f6c63430008180033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH26 0xBC19A4035DADA6A693060122BCEBC97CAF6FF9A8B02334FFCDCB PUSH7 0x76A44064736F6C PUSH4 0x43000818 STOP CALLER ",
			"sourceMap": "58:1118:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "60806040525f80fdfea26469706673582212202c79bc19a4035dada6a693060122bcebc97caf6ff9a8b02334ffcdcb6676a44064736f6c63430008180033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH26 0xBC19A4035DADA6A693060122BCEBC97CAF6FF9A8B02334FFCDCB PUSH7 0x76A44064736F6C PUSH4 0x43000818 STOP CALLER ",
			"sourceMap": "58:1118:0:-:0;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "12400",
				"executionCost": "64",
				"totalCost": "12464"
			},
			"internal": {
				"add(uint256,uint256)": "infinite",
				"div(uint256,uint256)": "infinite",
				"mul(uint256,uint256)": "infinite",
				"sub(uint256,uint256)": "infinite",
				"toFixed(uint256)": "infinite",
				"toInt(uint256)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": []
}