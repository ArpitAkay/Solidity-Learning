{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "serviceReqAddress",
						"type": "address"
					}
				],
				"name": "AlreadyVoted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "serviceReqAddress",
						"type": "address"
					}
				],
				"name": "SelfVoteNotAllowed",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "serviceReqAddress",
						"type": "address"
					}
				],
				"name": "ServiceDoesNotExists",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "serviceReqAddress",
						"type": "address"
					}
				],
				"name": "VotingEndedAlready",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "serviceReqAddress",
						"type": "address"
					}
				],
				"name": "VotingInProgress",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_serviceReqAddress",
						"type": "address"
					}
				],
				"name": "decideWinner",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "peopleWhoAlreadyVoted",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "serviceRequests",
				"outputs": [
					{
						"internalType": "string",
						"name": "serviceName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "shipperAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "shipperName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "driverAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "driverName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "receiverAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "receiverName",
						"type": "string"
					},
					{
						"internalType": "enum Types.ServiceStatus",
						"name": "serviceStatus",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "driverVote",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "receiverVote",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "users",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "stars",
						"type": "uint256"
					},
					{
						"internalType": "enum Types.Role",
						"name": "role",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_serviceReqAddress",
						"type": "address"
					},
					{
						"internalType": "enum Types.VoteType",
						"name": "whomToVote",
						"type": "uint8"
					}
				],
				"name": "vote",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Dispute.sol": "Dispute"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Dispute.sol": {
			"keccak256": "0x61c281e5ec3a26a1eaa87b3b41caed3ae62d34db6716444c00ca14356ae81dd4",
			"license": "MIT",
			"urls": [
				"bzz-raw://526cc1daefbcb92c197de4f11c41ce28715fd73a606342b4e101e0d601ec7a83",
				"dweb:/ipfs/QmUJgzYhLZjwgW5EzDHr4mjycm36PtinH3jA8Tt5f8nR1j"
			]
		},
		"contracts/Types.sol": {
			"keccak256": "0x38b67d2ebb83ca3aed8982cf70ab40257062204f686c75b51ec8f84e52bf96d7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e2a52fc8e23ab3a24433fec733592558407adc616a1f032350849efddda5e98",
				"dweb:/ipfs/QmXA9cJriVDKq6sRpmu1g9CN8EzmPbjUGg1zdPGpf6P61P"
			]
		}
	},
	"version": 1
}